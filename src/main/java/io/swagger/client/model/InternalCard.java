/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InternalCardProduct;
import io.swagger.client.model.InternalUser;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * InternalCard
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class InternalCard {
  @SerializedName("hash")
  private String hash = null;

  @SerializedName("kid")
  private String kid = null;

  @SerializedName("secureData")
  private String secureData = null;

  @SerializedName("serviceCode")
  private String serviceCode = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("user")
  private InternalUser user = null;

  @SerializedName("card_product")
  private InternalCardProduct cardProduct = null;

  @SerializedName("last_four")
  private String lastFour = null;

  @SerializedName("expiration_time")
  private OffsetDateTime expirationTime = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED"),
    
    TERMINATED("TERMINATED"),
    
    UNSUPPORTED("UNSUPPORTED"),
    
    UNACTIVATED("UNACTIVATED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("card_pin_block")
  private String cardPinBlock = null;

  public InternalCard hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @ApiModelProperty(value = "")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public InternalCard kid(String kid) {
    this.kid = kid;
    return this;
  }

   /**
   * Get kid
   * @return kid
  **/
  @ApiModelProperty(value = "")
  public String getKid() {
    return kid;
  }

  public void setKid(String kid) {
    this.kid = kid;
  }

  public InternalCard secureData(String secureData) {
    this.secureData = secureData;
    return this;
  }

   /**
   * Get secureData
   * @return secureData
  **/
  @ApiModelProperty(value = "")
  public String getSecureData() {
    return secureData;
  }

  public void setSecureData(String secureData) {
    this.secureData = secureData;
  }

  public InternalCard serviceCode(String serviceCode) {
    this.serviceCode = serviceCode;
    return this;
  }

   /**
   * Get serviceCode
   * @return serviceCode
  **/
  @ApiModelProperty(value = "")
  public String getServiceCode() {
    return serviceCode;
  }

  public void setServiceCode(String serviceCode) {
    this.serviceCode = serviceCode;
  }

  public InternalCard id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InternalCard token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public InternalCard user(InternalUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalUser getUser() {
    return user;
  }

  public void setUser(InternalUser user) {
    this.user = user;
  }

  public InternalCard cardProduct(InternalCardProduct cardProduct) {
    this.cardProduct = cardProduct;
    return this;
  }

   /**
   * Get cardProduct
   * @return cardProduct
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalCardProduct getCardProduct() {
    return cardProduct;
  }

  public void setCardProduct(InternalCardProduct cardProduct) {
    this.cardProduct = cardProduct;
  }

  public InternalCard lastFour(String lastFour) {
    this.lastFour = lastFour;
    return this;
  }

   /**
   * Get lastFour
   * @return lastFour
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLastFour() {
    return lastFour;
  }

  public void setLastFour(String lastFour) {
    this.lastFour = lastFour;
  }

  public InternalCard expirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

   /**
   * Get expirationTime
   * @return expirationTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
  }

  public InternalCard state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public InternalCard metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public InternalCard putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public InternalCard cardPinBlock(String cardPinBlock) {
    this.cardPinBlock = cardPinBlock;
    return this;
  }

   /**
   * Get cardPinBlock
   * @return cardPinBlock
  **/
  @ApiModelProperty(value = "")
  public String getCardPinBlock() {
    return cardPinBlock;
  }

  public void setCardPinBlock(String cardPinBlock) {
    this.cardPinBlock = cardPinBlock;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternalCard internalCard = (InternalCard) o;
    return Objects.equals(this.hash, internalCard.hash) &&
        Objects.equals(this.kid, internalCard.kid) &&
        Objects.equals(this.secureData, internalCard.secureData) &&
        Objects.equals(this.serviceCode, internalCard.serviceCode) &&
        Objects.equals(this.id, internalCard.id) &&
        Objects.equals(this.token, internalCard.token) &&
        Objects.equals(this.user, internalCard.user) &&
        Objects.equals(this.cardProduct, internalCard.cardProduct) &&
        Objects.equals(this.lastFour, internalCard.lastFour) &&
        Objects.equals(this.expirationTime, internalCard.expirationTime) &&
        Objects.equals(this.state, internalCard.state) &&
        Objects.equals(this.metadata, internalCard.metadata) &&
        Objects.equals(this.cardPinBlock, internalCard.cardPinBlock);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hash, kid, secureData, serviceCode, id, token, user, cardProduct, lastFour, expirationTime, state, metadata, cardPinBlock);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternalCard {\n");
    
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    kid: ").append(toIndentedString(kid)).append("\n");
    sb.append("    secureData: ").append(toIndentedString(secureData)).append("\n");
    sb.append("    serviceCode: ").append(toIndentedString(serviceCode)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    cardProduct: ").append(toIndentedString(cardProduct)).append("\n");
    sb.append("    lastFour: ").append(toIndentedString(lastFour)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    cardPinBlock: ").append(toIndentedString(cardPinBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

