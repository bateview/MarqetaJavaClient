/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Carrier
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class Carrier {
  @SerializedName("template_id")
  private String templateId = null;

  @SerializedName("logo_file")
  private String logoFile = null;

  @SerializedName("logo_thumbnail_file")
  private String logoThumbnailFile = null;

  @SerializedName("message_file")
  private String messageFile = null;

  @SerializedName("message_line")
  private String messageLine = null;

  public Carrier templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @ApiModelProperty(value = "")
  public String getTemplateId() {
    return templateId;
  }

  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

  public Carrier logoFile(String logoFile) {
    this.logoFile = logoFile;
    return this;
  }

   /**
   * Get logoFile
   * @return logoFile
  **/
  @ApiModelProperty(value = "")
  public String getLogoFile() {
    return logoFile;
  }

  public void setLogoFile(String logoFile) {
    this.logoFile = logoFile;
  }

  public Carrier logoThumbnailFile(String logoThumbnailFile) {
    this.logoThumbnailFile = logoThumbnailFile;
    return this;
  }

   /**
   * Get logoThumbnailFile
   * @return logoThumbnailFile
  **/
  @ApiModelProperty(value = "")
  public String getLogoThumbnailFile() {
    return logoThumbnailFile;
  }

  public void setLogoThumbnailFile(String logoThumbnailFile) {
    this.logoThumbnailFile = logoThumbnailFile;
  }

  public Carrier messageFile(String messageFile) {
    this.messageFile = messageFile;
    return this;
  }

   /**
   * Get messageFile
   * @return messageFile
  **/
  @ApiModelProperty(value = "")
  public String getMessageFile() {
    return messageFile;
  }

  public void setMessageFile(String messageFile) {
    this.messageFile = messageFile;
  }

  public Carrier messageLine(String messageLine) {
    this.messageLine = messageLine;
    return this;
  }

   /**
   * Get messageLine
   * @return messageLine
  **/
  @ApiModelProperty(value = "")
  public String getMessageLine() {
    return messageLine;
  }

  public void setMessageLine(String messageLine) {
    this.messageLine = messageLine;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Carrier carrier = (Carrier) o;
    return Objects.equals(this.templateId, carrier.templateId) &&
        Objects.equals(this.logoFile, carrier.logoFile) &&
        Objects.equals(this.logoThumbnailFile, carrier.logoThumbnailFile) &&
        Objects.equals(this.messageFile, carrier.messageFile) &&
        Objects.equals(this.messageLine, carrier.messageLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(templateId, logoFile, logoThumbnailFile, messageFile, messageLine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Carrier {\n");
    
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    logoFile: ").append(toIndentedString(logoFile)).append("\n");
    sb.append("    logoThumbnailFile: ").append(toIndentedString(logoThumbnailFile)).append("\n");
    sb.append("    messageFile: ").append(toIndentedString(messageFile)).append("\n");
    sb.append("    messageLine: ").append(toIndentedString(messageLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

