/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RealTimeFeeAssessmentRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class RealTimeFeeAssessmentRequest {
  /**
   * Gets or Sets transactionType
   */
  @JsonAdapter(TransactionTypeEnum.Adapter.class)
  public enum TransactionTypeEnum {
    AUTHORIZATION("authorization"),
    
    PINDEBIT_ATM_WITHDRAWAL("pindebit.atm.withdrawal"),
    
    PINDEBIT("pindebit");

    private String value;

    TransactionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransactionTypeEnum fromValue(String text) {
      for (TransactionTypeEnum b : TransactionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TransactionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransactionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransactionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TransactionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("transaction_type")
  private TransactionTypeEnum transactionType = null;

  @SerializedName("international_enabled")
  private Boolean internationalEnabled = false;

  @SerializedName("domestic_enabled")
  private Boolean domesticEnabled = false;

  public RealTimeFeeAssessmentRequest transactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @ApiModelProperty(value = "")
  public TransactionTypeEnum getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(TransactionTypeEnum transactionType) {
    this.transactionType = transactionType;
  }

  public RealTimeFeeAssessmentRequest internationalEnabled(Boolean internationalEnabled) {
    this.internationalEnabled = internationalEnabled;
    return this;
  }

   /**
   * Get internationalEnabled
   * @return internationalEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isInternationalEnabled() {
    return internationalEnabled;
  }

  public void setInternationalEnabled(Boolean internationalEnabled) {
    this.internationalEnabled = internationalEnabled;
  }

  public RealTimeFeeAssessmentRequest domesticEnabled(Boolean domesticEnabled) {
    this.domesticEnabled = domesticEnabled;
    return this;
  }

   /**
   * Get domesticEnabled
   * @return domesticEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isDomesticEnabled() {
    return domesticEnabled;
  }

  public void setDomesticEnabled(Boolean domesticEnabled) {
    this.domesticEnabled = domesticEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealTimeFeeAssessmentRequest realTimeFeeAssessmentRequest = (RealTimeFeeAssessmentRequest) o;
    return Objects.equals(this.transactionType, realTimeFeeAssessmentRequest.transactionType) &&
        Objects.equals(this.internationalEnabled, realTimeFeeAssessmentRequest.internationalEnabled) &&
        Objects.equals(this.domesticEnabled, realTimeFeeAssessmentRequest.domesticEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionType, internationalEnabled, domesticEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealTimeFeeAssessmentRequest {\n");
    
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    internationalEnabled: ").append(toIndentedString(internationalEnabled)).append("\n");
    sb.append("    domesticEnabled: ").append(toIndentedString(domesticEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

