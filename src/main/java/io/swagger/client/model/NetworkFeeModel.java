/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * NetworkFeeModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class NetworkFeeModel {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ISSUER_FEE("ISSUER_FEE"),
    
    SWITCH_FEE("SWITCH_FEE"),
    
    PINDEBIT_ASSOC_FEE("PINDEBIT_ASSOC_FEE"),
    
    ACQUIRER_FEE("ACQUIRER_FEE"),
    
    INTERCHANGE_FEE("INTERCHANGE_FEE"),
    
    CUR_CONV_CARDHOLDER_FEE("CUR_CONV_CARDHOLDER_FEE"),
    
    CUR_CONV_ISSUER_FEE("CUR_CONV_ISSUER_FEE"),
    
    CROSS_BORDER_ISSUER_FEE("CROSS_BORDER_ISSUER_FEE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  /**
   * C &#x3D; credit; D &#x3D; debit
   */
  @JsonAdapter(CreditDebitEnum.Adapter.class)
  public enum CreditDebitEnum {
    C("C"),
    
    D("D");

    private String value;

    CreditDebitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreditDebitEnum fromValue(String text) {
      for (CreditDebitEnum b : CreditDebitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CreditDebitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreditDebitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreditDebitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CreditDebitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("credit_debit")
  private CreditDebitEnum creditDebit = null;

  public NetworkFeeModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public NetworkFeeModel amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public NetworkFeeModel creditDebit(CreditDebitEnum creditDebit) {
    this.creditDebit = creditDebit;
    return this;
  }

   /**
   * C &#x3D; credit; D &#x3D; debit
   * @return creditDebit
  **/
  @ApiModelProperty(value = "C = credit; D = debit")
  public CreditDebitEnum getCreditDebit() {
    return creditDebit;
  }

  public void setCreditDebit(CreditDebitEnum creditDebit) {
    this.creditDebit = creditDebit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkFeeModel networkFeeModel = (NetworkFeeModel) o;
    return Objects.equals(this.type, networkFeeModel.type) &&
        Objects.equals(this.amount, networkFeeModel.amount) &&
        Objects.equals(this.creditDebit, networkFeeModel.creditDebit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, amount, creditDebit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkFeeModel {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    creditDebit: ").append(toIndentedString(creditDebit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

