/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InternalCard;
import io.swagger.client.model.Transaction;
import java.io.IOException;

/**
 * InternalUserTransactionRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class InternalUserTransactionRequest {
  @SerializedName("token")
  private String token = null;

  @SerializedName("card")
  private InternalCard card = null;

  @SerializedName("digitalWalletToken")
  private String digitalWalletToken = null;

  @SerializedName("transaction")
  private Transaction transaction = null;

  public InternalUserTransactionRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public InternalUserTransactionRequest card(InternalCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalCard getCard() {
    return card;
  }

  public void setCard(InternalCard card) {
    this.card = card;
  }

  public InternalUserTransactionRequest digitalWalletToken(String digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
    return this;
  }

   /**
   * Get digitalWalletToken
   * @return digitalWalletToken
  **/
  @ApiModelProperty(value = "")
  public String getDigitalWalletToken() {
    return digitalWalletToken;
  }

  public void setDigitalWalletToken(String digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
  }

  public InternalUserTransactionRequest transaction(Transaction transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @ApiModelProperty(value = "")
  public Transaction getTransaction() {
    return transaction;
  }

  public void setTransaction(Transaction transaction) {
    this.transaction = transaction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternalUserTransactionRequest internalUserTransactionRequest = (InternalUserTransactionRequest) o;
    return Objects.equals(this.token, internalUserTransactionRequest.token) &&
        Objects.equals(this.card, internalUserTransactionRequest.card) &&
        Objects.equals(this.digitalWalletToken, internalUserTransactionRequest.digitalWalletToken) &&
        Objects.equals(this.transaction, internalUserTransactionRequest.transaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, card, digitalWalletToken, transaction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternalUserTransactionRequest {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    digitalWalletToken: ").append(toIndentedString(digitalWalletToken)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

