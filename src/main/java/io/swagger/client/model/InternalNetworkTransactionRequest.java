/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InternalNetworkTransactionRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class InternalNetworkTransactionRequest {
  @SerializedName("token")
  private String token = null;

  @SerializedName("encryption_key_id")
  private String encryptionKeyId = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("network")
  private String network = null;

  @SerializedName("debit")
  private Boolean debit = false;

  public InternalNetworkTransactionRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public InternalNetworkTransactionRequest encryptionKeyId(String encryptionKeyId) {
    this.encryptionKeyId = encryptionKeyId;
    return this;
  }

   /**
   * Encryption key ID
   * @return encryptionKeyId
  **/
  @ApiModelProperty(value = "Encryption key ID")
  public String getEncryptionKeyId() {
    return encryptionKeyId;
  }

  public void setEncryptionKeyId(String encryptionKeyId) {
    this.encryptionKeyId = encryptionKeyId;
  }

  public InternalNetworkTransactionRequest message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public InternalNetworkTransactionRequest network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public InternalNetworkTransactionRequest debit(Boolean debit) {
    this.debit = debit;
    return this;
  }

   /**
   * Get debit
   * @return debit
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isDebit() {
    return debit;
  }

  public void setDebit(Boolean debit) {
    this.debit = debit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternalNetworkTransactionRequest internalNetworkTransactionRequest = (InternalNetworkTransactionRequest) o;
    return Objects.equals(this.token, internalNetworkTransactionRequest.token) &&
        Objects.equals(this.encryptionKeyId, internalNetworkTransactionRequest.encryptionKeyId) &&
        Objects.equals(this.message, internalNetworkTransactionRequest.message) &&
        Objects.equals(this.network, internalNetworkTransactionRequest.network) &&
        Objects.equals(this.debit, internalNetworkTransactionRequest.debit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, encryptionKeyId, message, network, debit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternalNetworkTransactionRequest {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    encryptionKeyId: ").append(toIndentedString(encryptionKeyId)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    debit: ").append(toIndentedString(debit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

