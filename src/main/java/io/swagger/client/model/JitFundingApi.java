/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CardholderBalance;
import io.swagger.client.model.JitAddressVerification;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JitFundingApi
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class JitFundingApi {
  @SerializedName("token")
  private String token = null;

  /**
   * Gets or Sets method
   */
  @JsonAdapter(MethodEnum.Adapter.class)
  public enum MethodEnum {
    AUTHORIZATION("pgfs.authorization"),
    
    BALANCEINQUIRY("pgfs.balanceinquiry"),
    
    AUTHORIZATION_INCREMENTAL("pgfs.authorization.incremental"),
    
    AUTHORIZATION_CAPTURE("pgfs.authorization.capture"),
    
    AUTHORIZATION_REVERSAL("pgfs.authorization.reversal"),
    
    AUTH_PLUS_CAPTURE("pgfs.auth_plus_capture"),
    
    REFUND("pgfs.refund"),
    
    FORCE_CAPTURE("pgfs.force_capture"),
    
    AUTHORIZATION_CAPTURE_CHARGEBACK("pgfs.authorization.capture.chargeback"),
    
    AUTHORIZATION_CAPTURE_CHARGEBACK_REVERSAL("pgfs.authorization.capture.chargeback.reversal"),
    
    PINDEBIT_CHARGEBACK("pgfs.pindebit.chargeback"),
    
    PINDEBIT_CHARGEBACK_REVERSAL("pgfs.pindebit.chargeback.reversal"),
    
    DISPUTE_CREDIT("pgfs.dispute.credit"),
    
    DISPUTE_DEBIT("pgfs.dispute.debit"),
    
    DIRECTDEPOSIT_CREDIT("pgfs.directdeposit.credit"),
    
    DIRECTDEPOSIT_DEBIT("pgfs.directdeposit.debit"),
    
    DIRECTDEPOSIT_CREDIT_REVERSAL("pgfs.directdeposit.credit.reversal"),
    
    DIRECTDEPOSIT_DEBIT_REVERSAL("pgfs.directdeposit.debit.reversal"),
    
    ADJUSTMENT_CREDIT("pgfs.adjustment.credit"),
    
    ADJUSTMENT_DEBIT("pgfs.adjustment.debit"),
    
    AUTH_PLUS_CAPTURE_STANDIN("pgfs.auth_plus_capture.standin"),
    
    AUTHORIZATION_STANDIN("pgfs.authorization.standin"),
    
    NETWORK_LOAD("pgfs.network.load"),
    
    ORIGINAL_CREDIT_AUTHORIZATION("pgfs.original.credit.authorization"),
    
    ORIGINAL_CREDIT_AUTH_PLUS_CAPTURE("pgfs.original.credit.auth_plus_capture"),
    
    REFUND_AUTHORIZATION("pgfs.refund.authorization"),
    
    REFUND_AUTHORIZATION_REVERSALPGFS_BILLPAYMENT("pgfs.refund.authorization.reversalpgfs.billpayment"),
    
    BILLPAYMENT_CAPTURE("pgfs.billpayment.capture"),
    
    BILLPAYMENT_REVERSAL("pgfs.billpayment.reversal");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MethodEnum fromValue(String text) {
      for (MethodEnum b : MethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("method")
  private MethodEnum method = null;

  @SerializedName("user_token")
  private String userToken = null;

  @SerializedName("acting_user_token")
  private String actingUserToken = null;

  @SerializedName("business_token")
  private String businessToken = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("memo")
  private String memo = null;

  @SerializedName("tags")
  private String tags = null;

  @SerializedName("original_jit_funding_token")
  private String originalJitFundingToken = null;

  @SerializedName("incremental_authorization_jit_funding_tokens")
  private List<String> incrementalAuthorizationJitFundingTokens = null;

  @SerializedName("address_verification")
  private JitAddressVerification addressVerification = null;

  @SerializedName("balances")
  private Map<String, CardholderBalance> balances = null;

  public JitFundingApi token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public JitFundingApi method(MethodEnum method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @ApiModelProperty(required = true, value = "")
  public MethodEnum getMethod() {
    return method;
  }

  public void setMethod(MethodEnum method) {
    this.method = method;
  }

  public JitFundingApi userToken(String userToken) {
    this.userToken = userToken;
    return this;
  }

   /**
   * Get userToken
   * @return userToken
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserToken() {
    return userToken;
  }

  public void setUserToken(String userToken) {
    this.userToken = userToken;
  }

  public JitFundingApi actingUserToken(String actingUserToken) {
    this.actingUserToken = actingUserToken;
    return this;
  }

   /**
   * Get actingUserToken
   * @return actingUserToken
  **/
  @ApiModelProperty(value = "")
  public String getActingUserToken() {
    return actingUserToken;
  }

  public void setActingUserToken(String actingUserToken) {
    this.actingUserToken = actingUserToken;
  }

  public JitFundingApi businessToken(String businessToken) {
    this.businessToken = businessToken;
    return this;
  }

   /**
   * Get businessToken
   * @return businessToken
  **/
  @ApiModelProperty(value = "")
  public String getBusinessToken() {
    return businessToken;
  }

  public void setBusinessToken(String businessToken) {
    this.businessToken = businessToken;
  }

  public JitFundingApi amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * minimum: 0
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public JitFundingApi memo(String memo) {
    this.memo = memo;
    return this;
  }

   /**
   * Get memo
   * @return memo
  **/
  @ApiModelProperty(value = "")
  public String getMemo() {
    return memo;
  }

  public void setMemo(String memo) {
    this.memo = memo;
  }

  public JitFundingApi tags(String tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }

  public JitFundingApi originalJitFundingToken(String originalJitFundingToken) {
    this.originalJitFundingToken = originalJitFundingToken;
    return this;
  }

   /**
   * Get originalJitFundingToken
   * @return originalJitFundingToken
  **/
  @ApiModelProperty(value = "")
  public String getOriginalJitFundingToken() {
    return originalJitFundingToken;
  }

  public void setOriginalJitFundingToken(String originalJitFundingToken) {
    this.originalJitFundingToken = originalJitFundingToken;
  }

  public JitFundingApi incrementalAuthorizationJitFundingTokens(List<String> incrementalAuthorizationJitFundingTokens) {
    this.incrementalAuthorizationJitFundingTokens = incrementalAuthorizationJitFundingTokens;
    return this;
  }

  public JitFundingApi addIncrementalAuthorizationJitFundingTokensItem(String incrementalAuthorizationJitFundingTokensItem) {
    if (this.incrementalAuthorizationJitFundingTokens == null) {
      this.incrementalAuthorizationJitFundingTokens = new ArrayList<String>();
    }
    this.incrementalAuthorizationJitFundingTokens.add(incrementalAuthorizationJitFundingTokensItem);
    return this;
  }

   /**
   * Get incrementalAuthorizationJitFundingTokens
   * @return incrementalAuthorizationJitFundingTokens
  **/
  @ApiModelProperty(value = "")
  public List<String> getIncrementalAuthorizationJitFundingTokens() {
    return incrementalAuthorizationJitFundingTokens;
  }

  public void setIncrementalAuthorizationJitFundingTokens(List<String> incrementalAuthorizationJitFundingTokens) {
    this.incrementalAuthorizationJitFundingTokens = incrementalAuthorizationJitFundingTokens;
  }

  public JitFundingApi addressVerification(JitAddressVerification addressVerification) {
    this.addressVerification = addressVerification;
    return this;
  }

   /**
   * Get addressVerification
   * @return addressVerification
  **/
  @ApiModelProperty(value = "")
  public JitAddressVerification getAddressVerification() {
    return addressVerification;
  }

  public void setAddressVerification(JitAddressVerification addressVerification) {
    this.addressVerification = addressVerification;
  }

  public JitFundingApi balances(Map<String, CardholderBalance> balances) {
    this.balances = balances;
    return this;
  }

  public JitFundingApi putBalancesItem(String key, CardholderBalance balancesItem) {
    if (this.balances == null) {
      this.balances = new HashMap<String, CardholderBalance>();
    }
    this.balances.put(key, balancesItem);
    return this;
  }

   /**
   * Get balances
   * @return balances
  **/
  @ApiModelProperty(value = "")
  public Map<String, CardholderBalance> getBalances() {
    return balances;
  }

  public void setBalances(Map<String, CardholderBalance> balances) {
    this.balances = balances;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JitFundingApi jitFundingApi = (JitFundingApi) o;
    return Objects.equals(this.token, jitFundingApi.token) &&
        Objects.equals(this.method, jitFundingApi.method) &&
        Objects.equals(this.userToken, jitFundingApi.userToken) &&
        Objects.equals(this.actingUserToken, jitFundingApi.actingUserToken) &&
        Objects.equals(this.businessToken, jitFundingApi.businessToken) &&
        Objects.equals(this.amount, jitFundingApi.amount) &&
        Objects.equals(this.memo, jitFundingApi.memo) &&
        Objects.equals(this.tags, jitFundingApi.tags) &&
        Objects.equals(this.originalJitFundingToken, jitFundingApi.originalJitFundingToken) &&
        Objects.equals(this.incrementalAuthorizationJitFundingTokens, jitFundingApi.incrementalAuthorizationJitFundingTokens) &&
        Objects.equals(this.addressVerification, jitFundingApi.addressVerification) &&
        Objects.equals(this.balances, jitFundingApi.balances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, method, userToken, actingUserToken, businessToken, amount, memo, tags, originalJitFundingToken, incrementalAuthorizationJitFundingTokens, addressVerification, balances);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JitFundingApi {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("    actingUserToken: ").append(toIndentedString(actingUserToken)).append("\n");
    sb.append("    businessToken: ").append(toIndentedString(businessToken)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    originalJitFundingToken: ").append(toIndentedString(originalJitFundingToken)).append("\n");
    sb.append("    incrementalAuthorizationJitFundingTokens: ").append(toIndentedString(incrementalAuthorizationJitFundingTokens)).append("\n");
    sb.append("    addressVerification: ").append(toIndentedString(addressVerification)).append("\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

