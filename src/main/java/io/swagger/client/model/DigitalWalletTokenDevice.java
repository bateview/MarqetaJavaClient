/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DigitalWalletTokenDevice
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class DigitalWalletTokenDevice {
  /**
   * Gets or Sets deviceType
   */
  @JsonAdapter(DeviceTypeEnum.Adapter.class)
  public enum DeviceTypeEnum {
    UNKNOWN("UNKNOWN"),
    
    MOBILE_PHONE("MOBILE_PHONE"),
    
    WATCH("WATCH"),
    
    TABLET("TABLET"),
    
    MOBILE_PHONE_OR_TABLET("MOBILE_PHONE_OR_TABLET"),
    
    PERSONAL_COMPUTER("PERSONAL_COMPUTER");

    private String value;

    DeviceTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeviceTypeEnum fromValue(String text) {
      for (DeviceTypeEnum b : DeviceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeviceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeviceTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeviceTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DeviceTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("device_type")
  private DeviceTypeEnum deviceType = null;

  @SerializedName("device_lang_code")
  private String deviceLangCode = null;

  @SerializedName("device_id")
  private String deviceId = null;

  @SerializedName("device_number")
  private String deviceNumber = null;

  @SerializedName("device_name")
  private String deviceName = null;

  @SerializedName("device_location")
  private String deviceLocation = null;

  @SerializedName("device_ip_address")
  private String deviceIpAddress = null;

  public DigitalWalletTokenDevice deviceType(DeviceTypeEnum deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @ApiModelProperty(value = "")
  public DeviceTypeEnum getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(DeviceTypeEnum deviceType) {
    this.deviceType = deviceType;
  }

  public DigitalWalletTokenDevice deviceLangCode(String deviceLangCode) {
    this.deviceLangCode = deviceLangCode;
    return this;
  }

   /**
   * Get deviceLangCode
   * @return deviceLangCode
  **/
  @ApiModelProperty(value = "")
  public String getDeviceLangCode() {
    return deviceLangCode;
  }

  public void setDeviceLangCode(String deviceLangCode) {
    this.deviceLangCode = deviceLangCode;
  }

  public DigitalWalletTokenDevice deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Get deviceId
   * @return deviceId
  **/
  @ApiModelProperty(value = "")
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public DigitalWalletTokenDevice deviceNumber(String deviceNumber) {
    this.deviceNumber = deviceNumber;
    return this;
  }

   /**
   * Get deviceNumber
   * @return deviceNumber
  **/
  @ApiModelProperty(value = "")
  public String getDeviceNumber() {
    return deviceNumber;
  }

  public void setDeviceNumber(String deviceNumber) {
    this.deviceNumber = deviceNumber;
  }

  public DigitalWalletTokenDevice deviceName(String deviceName) {
    this.deviceName = deviceName;
    return this;
  }

   /**
   * Get deviceName
   * @return deviceName
  **/
  @ApiModelProperty(value = "")
  public String getDeviceName() {
    return deviceName;
  }

  public void setDeviceName(String deviceName) {
    this.deviceName = deviceName;
  }

  public DigitalWalletTokenDevice deviceLocation(String deviceLocation) {
    this.deviceLocation = deviceLocation;
    return this;
  }

   /**
   * Get deviceLocation
   * @return deviceLocation
  **/
  @ApiModelProperty(value = "")
  public String getDeviceLocation() {
    return deviceLocation;
  }

  public void setDeviceLocation(String deviceLocation) {
    this.deviceLocation = deviceLocation;
  }

  public DigitalWalletTokenDevice deviceIpAddress(String deviceIpAddress) {
    this.deviceIpAddress = deviceIpAddress;
    return this;
  }

   /**
   * Get deviceIpAddress
   * @return deviceIpAddress
  **/
  @ApiModelProperty(value = "")
  public String getDeviceIpAddress() {
    return deviceIpAddress;
  }

  public void setDeviceIpAddress(String deviceIpAddress) {
    this.deviceIpAddress = deviceIpAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DigitalWalletTokenDevice digitalWalletTokenDevice = (DigitalWalletTokenDevice) o;
    return Objects.equals(this.deviceType, digitalWalletTokenDevice.deviceType) &&
        Objects.equals(this.deviceLangCode, digitalWalletTokenDevice.deviceLangCode) &&
        Objects.equals(this.deviceId, digitalWalletTokenDevice.deviceId) &&
        Objects.equals(this.deviceNumber, digitalWalletTokenDevice.deviceNumber) &&
        Objects.equals(this.deviceName, digitalWalletTokenDevice.deviceName) &&
        Objects.equals(this.deviceLocation, digitalWalletTokenDevice.deviceLocation) &&
        Objects.equals(this.deviceIpAddress, digitalWalletTokenDevice.deviceIpAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceType, deviceLangCode, deviceId, deviceNumber, deviceName, deviceLocation, deviceIpAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DigitalWalletTokenDevice {\n");
    
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceLangCode: ").append(toIndentedString(deviceLangCode)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    deviceNumber: ").append(toIndentedString(deviceNumber)).append("\n");
    sb.append("    deviceName: ").append(toIndentedString(deviceName)).append("\n");
    sb.append("    deviceLocation: ").append(toIndentedString(deviceLocation)).append("\n");
    sb.append("    deviceIpAddress: ").append(toIndentedString(deviceIpAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

