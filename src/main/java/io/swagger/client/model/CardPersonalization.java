/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Carrier;
import io.swagger.client.model.Images;
import io.swagger.client.model.Text;
import java.io.IOException;

/**
 * CardPersonalization
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class CardPersonalization {
  @SerializedName("text")
  private Text text = null;

  @SerializedName("images")
  private Images images = null;

  @SerializedName("carrier")
  private Carrier carrier = null;

  /**
   * Gets or Sets persoType
   */
  @JsonAdapter(PersoTypeEnum.Adapter.class)
  public enum PersoTypeEnum {
    EMBOSS("EMBOSS"),
    
    LASER("LASER"),
    
    FLAT("FLAT");

    private String value;

    PersoTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PersoTypeEnum fromValue(String text) {
      for (PersoTypeEnum b : PersoTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PersoTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PersoTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PersoTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PersoTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("perso_type")
  private PersoTypeEnum persoType = null;

  public CardPersonalization text(Text text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(required = true, value = "")
  public Text getText() {
    return text;
  }

  public void setText(Text text) {
    this.text = text;
  }

  public CardPersonalization images(Images images) {
    this.images = images;
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @ApiModelProperty(value = "")
  public Images getImages() {
    return images;
  }

  public void setImages(Images images) {
    this.images = images;
  }

  public CardPersonalization carrier(Carrier carrier) {
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @ApiModelProperty(value = "")
  public Carrier getCarrier() {
    return carrier;
  }

  public void setCarrier(Carrier carrier) {
    this.carrier = carrier;
  }

  public CardPersonalization persoType(PersoTypeEnum persoType) {
    this.persoType = persoType;
    return this;
  }

   /**
   * Get persoType
   * @return persoType
  **/
  @ApiModelProperty(value = "")
  public PersoTypeEnum getPersoType() {
    return persoType;
  }

  public void setPersoType(PersoTypeEnum persoType) {
    this.persoType = persoType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardPersonalization cardPersonalization = (CardPersonalization) o;
    return Objects.equals(this.text, cardPersonalization.text) &&
        Objects.equals(this.images, cardPersonalization.images) &&
        Objects.equals(this.carrier, cardPersonalization.carrier) &&
        Objects.equals(this.persoType, cardPersonalization.persoType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, images, carrier, persoType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardPersonalization {\n");
    
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    persoType: ").append(toIndentedString(persoType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

