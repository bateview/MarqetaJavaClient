/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ActivationActions;
import io.swagger.client.model.CardFulfillmentResponse;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * CardResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class CardResponse {
  @SerializedName("created_time")
  private OffsetDateTime createdTime = null;

  @SerializedName("last_modified_time")
  private OffsetDateTime lastModifiedTime = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("user_token")
  private String userToken = null;

  @SerializedName("card_product_token")
  private String cardProductToken = null;

  /**
   * Gets or Sets lastFour
   */
  @JsonAdapter(LastFourEnum.Adapter.class)
  public enum LastFourEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    LastFourEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastFourEnum fromValue(String text) {
      for (LastFourEnum b : LastFourEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LastFourEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastFourEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastFourEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LastFourEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("last_four")
  private LastFourEnum lastFour = null;

  @SerializedName("pan")
  private String pan = null;

  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("expiration_time")
  private OffsetDateTime expirationTime = null;

  @SerializedName("cvv_number")
  private String cvvNumber = null;

  @SerializedName("chip_cvv_number")
  private String chipCvvNumber = null;

  @SerializedName("barcode")
  private String barcode = null;

  @SerializedName("pin_is_set")
  private Boolean pinIsSet = false;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("ACTIVE"),
    
    SUSPENDED("SUSPENDED"),
    
    TERMINATED("TERMINATED"),
    
    UNSUPPORTED("UNSUPPORTED"),
    
    UNACTIVATED("UNACTIVATED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("state_reason")
  private String stateReason = null;

  /**
   * Gets or Sets fulfillmentStatus
   */
  @JsonAdapter(FulfillmentStatusEnum.Adapter.class)
  public enum FulfillmentStatusEnum {
    ISSUED("ISSUED"),
    
    ORDERED("ORDERED"),
    
    REORDERED("REORDERED"),
    
    REJECTED("REJECTED"),
    
    SHIPPED("SHIPPED"),
    
    DELIVERED("DELIVERED"),
    
    DIGITALLY_PRESENTED("DIGITALLY_PRESENTED");

    private String value;

    FulfillmentStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FulfillmentStatusEnum fromValue(String text) {
      for (FulfillmentStatusEnum b : FulfillmentStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FulfillmentStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FulfillmentStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FulfillmentStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FulfillmentStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("fulfillment_status")
  private FulfillmentStatusEnum fulfillmentStatus = null;

  @SerializedName("reissue_pan_from_card_token")
  private String reissuePanFromCardToken = null;

  @SerializedName("fulfillment")
  private CardFulfillmentResponse fulfillment = null;

  @SerializedName("bulk_issuance_token")
  private String bulkIssuanceToken = null;

  @SerializedName("translate_pin_from_card_token")
  private String translatePinFromCardToken = null;

  @SerializedName("activation_actions")
  private ActivationActions activationActions = null;

  /**
   * Gets or Sets instrumentType
   */
  @JsonAdapter(InstrumentTypeEnum.Adapter.class)
  public enum InstrumentTypeEnum {
    PHYSICAL_MSR("PHYSICAL_MSR"),
    
    PHYSICAL_ICC("PHYSICAL_ICC"),
    
    PHYSICAL_CONTACTLESS("PHYSICAL_CONTACTLESS"),
    
    PHYSICAL_COMBO("PHYSICAL_COMBO"),
    
    VIRTUAL_PAN("VIRTUAL_PAN");

    private String value;

    InstrumentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InstrumentTypeEnum fromValue(String text) {
      for (InstrumentTypeEnum b : InstrumentTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InstrumentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InstrumentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InstrumentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InstrumentTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("instrument_type")
  private InstrumentTypeEnum instrumentType = null;

  @SerializedName("expedite")
  private Boolean expedite = false;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  public CardResponse createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return createdTime
  **/
  @ApiModelProperty(required = true, value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }

  public CardResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return lastModifiedTime
  **/
  @ApiModelProperty(required = true, value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }

  public CardResponse token(String token) {
    this.token = token;
    return this;
  }

   /**
   * 36 char max
   * @return token
  **/
  @ApiModelProperty(required = true, value = "36 char max")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public CardResponse userToken(String userToken) {
    this.userToken = userToken;
    return this;
  }

   /**
   * 36 char max
   * @return userToken
  **/
  @ApiModelProperty(required = true, value = "36 char max")
  public String getUserToken() {
    return userToken;
  }

  public void setUserToken(String userToken) {
    this.userToken = userToken;
  }

  public CardResponse cardProductToken(String cardProductToken) {
    this.cardProductToken = cardProductToken;
    return this;
  }

   /**
   * 36 char max
   * @return cardProductToken
  **/
  @ApiModelProperty(required = true, value = "36 char max")
  public String getCardProductToken() {
    return cardProductToken;
  }

  public void setCardProductToken(String cardProductToken) {
    this.cardProductToken = cardProductToken;
  }

  public CardResponse lastFour(LastFourEnum lastFour) {
    this.lastFour = lastFour;
    return this;
  }

   /**
   * Get lastFour
   * @return lastFour
  **/
  @ApiModelProperty(required = true, value = "")
  public LastFourEnum getLastFour() {
    return lastFour;
  }

  public void setLastFour(LastFourEnum lastFour) {
    this.lastFour = lastFour;
  }

  public CardResponse pan(String pan) {
    this.pan = pan;
    return this;
  }

   /**
   * Get pan
   * @return pan
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPan() {
    return pan;
  }

  public void setPan(String pan) {
    this.pan = pan;
  }

  public CardResponse expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public CardResponse expirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return expirationTime
  **/
  @ApiModelProperty(required = true, value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getExpirationTime() {
    return expirationTime;
  }

  public void setExpirationTime(OffsetDateTime expirationTime) {
    this.expirationTime = expirationTime;
  }

  public CardResponse cvvNumber(String cvvNumber) {
    this.cvvNumber = cvvNumber;
    return this;
  }

   /**
   * Get cvvNumber
   * @return cvvNumber
  **/
  @ApiModelProperty(value = "")
  public String getCvvNumber() {
    return cvvNumber;
  }

  public void setCvvNumber(String cvvNumber) {
    this.cvvNumber = cvvNumber;
  }

  public CardResponse chipCvvNumber(String chipCvvNumber) {
    this.chipCvvNumber = chipCvvNumber;
    return this;
  }

   /**
   * Get chipCvvNumber
   * @return chipCvvNumber
  **/
  @ApiModelProperty(value = "")
  public String getChipCvvNumber() {
    return chipCvvNumber;
  }

  public void setChipCvvNumber(String chipCvvNumber) {
    this.chipCvvNumber = chipCvvNumber;
  }

  public CardResponse barcode(String barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * Get barcode
   * @return barcode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBarcode() {
    return barcode;
  }

  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  public CardResponse pinIsSet(Boolean pinIsSet) {
    this.pinIsSet = pinIsSet;
    return this;
  }

   /**
   * Get pinIsSet
   * @return pinIsSet
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isPinIsSet() {
    return pinIsSet;
  }

  public void setPinIsSet(Boolean pinIsSet) {
    this.pinIsSet = pinIsSet;
  }

  public CardResponse state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public CardResponse stateReason(String stateReason) {
    this.stateReason = stateReason;
    return this;
  }

   /**
   * Get stateReason
   * @return stateReason
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStateReason() {
    return stateReason;
  }

  public void setStateReason(String stateReason) {
    this.stateReason = stateReason;
  }

  public CardResponse fulfillmentStatus(FulfillmentStatusEnum fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

   /**
   * Get fulfillmentStatus
   * @return fulfillmentStatus
  **/
  @ApiModelProperty(required = true, value = "")
  public FulfillmentStatusEnum getFulfillmentStatus() {
    return fulfillmentStatus;
  }

  public void setFulfillmentStatus(FulfillmentStatusEnum fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
  }

  public CardResponse reissuePanFromCardToken(String reissuePanFromCardToken) {
    this.reissuePanFromCardToken = reissuePanFromCardToken;
    return this;
  }

   /**
   * Get reissuePanFromCardToken
   * @return reissuePanFromCardToken
  **/
  @ApiModelProperty(value = "")
  public String getReissuePanFromCardToken() {
    return reissuePanFromCardToken;
  }

  public void setReissuePanFromCardToken(String reissuePanFromCardToken) {
    this.reissuePanFromCardToken = reissuePanFromCardToken;
  }

  public CardResponse fulfillment(CardFulfillmentResponse fulfillment) {
    this.fulfillment = fulfillment;
    return this;
  }

   /**
   * Get fulfillment
   * @return fulfillment
  **/
  @ApiModelProperty(value = "")
  public CardFulfillmentResponse getFulfillment() {
    return fulfillment;
  }

  public void setFulfillment(CardFulfillmentResponse fulfillment) {
    this.fulfillment = fulfillment;
  }

  public CardResponse bulkIssuanceToken(String bulkIssuanceToken) {
    this.bulkIssuanceToken = bulkIssuanceToken;
    return this;
  }

   /**
   * Get bulkIssuanceToken
   * @return bulkIssuanceToken
  **/
  @ApiModelProperty(value = "")
  public String getBulkIssuanceToken() {
    return bulkIssuanceToken;
  }

  public void setBulkIssuanceToken(String bulkIssuanceToken) {
    this.bulkIssuanceToken = bulkIssuanceToken;
  }

  public CardResponse translatePinFromCardToken(String translatePinFromCardToken) {
    this.translatePinFromCardToken = translatePinFromCardToken;
    return this;
  }

   /**
   * Get translatePinFromCardToken
   * @return translatePinFromCardToken
  **/
  @ApiModelProperty(value = "")
  public String getTranslatePinFromCardToken() {
    return translatePinFromCardToken;
  }

  public void setTranslatePinFromCardToken(String translatePinFromCardToken) {
    this.translatePinFromCardToken = translatePinFromCardToken;
  }

  public CardResponse activationActions(ActivationActions activationActions) {
    this.activationActions = activationActions;
    return this;
  }

   /**
   * Get activationActions
   * @return activationActions
  **/
  @ApiModelProperty(value = "")
  public ActivationActions getActivationActions() {
    return activationActions;
  }

  public void setActivationActions(ActivationActions activationActions) {
    this.activationActions = activationActions;
  }

  public CardResponse instrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = instrumentType;
    return this;
  }

   /**
   * Get instrumentType
   * @return instrumentType
  **/
  @ApiModelProperty(value = "")
  public InstrumentTypeEnum getInstrumentType() {
    return instrumentType;
  }

  public void setInstrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = instrumentType;
  }

  public CardResponse expedite(Boolean expedite) {
    this.expedite = expedite;
    return this;
  }

   /**
   * Get expedite
   * @return expedite
  **/
  @ApiModelProperty(value = "")
  public Boolean isExpedite() {
    return expedite;
  }

  public void setExpedite(Boolean expedite) {
    this.expedite = expedite;
  }

  public CardResponse metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public CardResponse putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CardResponse cardResponse = (CardResponse) o;
    return Objects.equals(this.createdTime, cardResponse.createdTime) &&
        Objects.equals(this.lastModifiedTime, cardResponse.lastModifiedTime) &&
        Objects.equals(this.token, cardResponse.token) &&
        Objects.equals(this.userToken, cardResponse.userToken) &&
        Objects.equals(this.cardProductToken, cardResponse.cardProductToken) &&
        Objects.equals(this.lastFour, cardResponse.lastFour) &&
        Objects.equals(this.pan, cardResponse.pan) &&
        Objects.equals(this.expiration, cardResponse.expiration) &&
        Objects.equals(this.expirationTime, cardResponse.expirationTime) &&
        Objects.equals(this.cvvNumber, cardResponse.cvvNumber) &&
        Objects.equals(this.chipCvvNumber, cardResponse.chipCvvNumber) &&
        Objects.equals(this.barcode, cardResponse.barcode) &&
        Objects.equals(this.pinIsSet, cardResponse.pinIsSet) &&
        Objects.equals(this.state, cardResponse.state) &&
        Objects.equals(this.stateReason, cardResponse.stateReason) &&
        Objects.equals(this.fulfillmentStatus, cardResponse.fulfillmentStatus) &&
        Objects.equals(this.reissuePanFromCardToken, cardResponse.reissuePanFromCardToken) &&
        Objects.equals(this.fulfillment, cardResponse.fulfillment) &&
        Objects.equals(this.bulkIssuanceToken, cardResponse.bulkIssuanceToken) &&
        Objects.equals(this.translatePinFromCardToken, cardResponse.translatePinFromCardToken) &&
        Objects.equals(this.activationActions, cardResponse.activationActions) &&
        Objects.equals(this.instrumentType, cardResponse.instrumentType) &&
        Objects.equals(this.expedite, cardResponse.expedite) &&
        Objects.equals(this.metadata, cardResponse.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, lastModifiedTime, token, userToken, cardProductToken, lastFour, pan, expiration, expirationTime, cvvNumber, chipCvvNumber, barcode, pinIsSet, state, stateReason, fulfillmentStatus, reissuePanFromCardToken, fulfillment, bulkIssuanceToken, translatePinFromCardToken, activationActions, instrumentType, expedite, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CardResponse {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("    cardProductToken: ").append(toIndentedString(cardProductToken)).append("\n");
    sb.append("    lastFour: ").append(toIndentedString(lastFour)).append("\n");
    sb.append("    pan: ").append(toIndentedString(pan)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    expirationTime: ").append(toIndentedString(expirationTime)).append("\n");
    sb.append("    cvvNumber: ").append(toIndentedString(cvvNumber)).append("\n");
    sb.append("    chipCvvNumber: ").append(toIndentedString(chipCvvNumber)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("    pinIsSet: ").append(toIndentedString(pinIsSet)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateReason: ").append(toIndentedString(stateReason)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("    reissuePanFromCardToken: ").append(toIndentedString(reissuePanFromCardToken)).append("\n");
    sb.append("    fulfillment: ").append(toIndentedString(fulfillment)).append("\n");
    sb.append("    bulkIssuanceToken: ").append(toIndentedString(bulkIssuanceToken)).append("\n");
    sb.append("    translatePinFromCardToken: ").append(toIndentedString(translatePinFromCardToken)).append("\n");
    sb.append("    activationActions: ").append(toIndentedString(activationActions)).append("\n");
    sb.append("    instrumentType: ").append(toIndentedString(instrumentType)).append("\n");
    sb.append("    expedite: ").append(toIndentedString(expedite)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

