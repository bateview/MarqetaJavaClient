/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FileProcessingRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class FileProcessingRequest {
  @SerializedName("token")
  private String token = null;

  /**
   * Gets or Sets fileProcessType
   */
  @JsonAdapter(FileProcessTypeEnum.Adapter.class)
  public enum FileProcessTypeEnum {
    MASTERCARD_CLEARING("MASTERCARD_CLEARING"),
    
    VISA_CLEARING("VISA_CLEARING"),
    
    PULSE_CLEARING("PULSE_CLEARING"),
    
    DISCOVER_CLEARING("DISCOVER_CLEARING");

    private String value;

    FileProcessTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FileProcessTypeEnum fromValue(String text) {
      for (FileProcessTypeEnum b : FileProcessTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FileProcessTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FileProcessTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FileProcessTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FileProcessTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("file_process_type")
  private FileProcessTypeEnum fileProcessType = null;

  @SerializedName("source_file")
  private String sourceFile = null;

  @SerializedName("archive_file")
  private String archiveFile = null;

  public FileProcessingRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public FileProcessingRequest fileProcessType(FileProcessTypeEnum fileProcessType) {
    this.fileProcessType = fileProcessType;
    return this;
  }

   /**
   * Get fileProcessType
   * @return fileProcessType
  **/
  @ApiModelProperty(required = true, value = "")
  public FileProcessTypeEnum getFileProcessType() {
    return fileProcessType;
  }

  public void setFileProcessType(FileProcessTypeEnum fileProcessType) {
    this.fileProcessType = fileProcessType;
  }

  public FileProcessingRequest sourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
    return this;
  }

   /**
   * Get sourceFile
   * @return sourceFile
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceFile() {
    return sourceFile;
  }

  public void setSourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
  }

  public FileProcessingRequest archiveFile(String archiveFile) {
    this.archiveFile = archiveFile;
    return this;
  }

   /**
   * Get archiveFile
   * @return archiveFile
  **/
  @ApiModelProperty(value = "")
  public String getArchiveFile() {
    return archiveFile;
  }

  public void setArchiveFile(String archiveFile) {
    this.archiveFile = archiveFile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileProcessingRequest fileProcessingRequest = (FileProcessingRequest) o;
    return Objects.equals(this.token, fileProcessingRequest.token) &&
        Objects.equals(this.fileProcessType, fileProcessingRequest.fileProcessType) &&
        Objects.equals(this.sourceFile, fileProcessingRequest.sourceFile) &&
        Objects.equals(this.archiveFile, fileProcessingRequest.archiveFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, fileProcessType, sourceFile, archiveFile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileProcessingRequest {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    fileProcessType: ").append(toIndentedString(fileProcessType)).append("\n");
    sb.append("    sourceFile: ").append(toIndentedString(sourceFile)).append("\n");
    sb.append("    archiveFile: ").append(toIndentedString(archiveFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

