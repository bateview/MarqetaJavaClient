/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * PushToCardResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class PushToCardResponse {
  @SerializedName("created_time")
  private OffsetDateTime createdTime = null;

  @SerializedName("last_modified_time")
  private OffsetDateTime lastModifiedTime = null;

  @SerializedName("address_1")
  private String address1 = null;

  @SerializedName("address_2")
  private String address2 = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("zip")
  private String zip = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("last_four")
  private String lastFour = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("fast_fund_transfer_eligible")
  private Boolean fastFundTransferEligible = false;

  @SerializedName("gambling_fund_transfer_eligible")
  private Boolean gamblingFundTransferEligible = false;

  @SerializedName("name_on_card")
  private String nameOnCard = null;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("exp_date")
  private String expDate = null;

  public PushToCardResponse createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return createdTime
  **/
  @ApiModelProperty(required = true, value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }

  public PushToCardResponse lastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return lastModifiedTime
  **/
  @ApiModelProperty(required = true, value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getLastModifiedTime() {
    return lastModifiedTime;
  }

  public void setLastModifiedTime(OffsetDateTime lastModifiedTime) {
    this.lastModifiedTime = lastModifiedTime;
  }

  public PushToCardResponse address1(String address1) {
    this.address1 = address1;
    return this;
  }

   /**
   * Get address1
   * @return address1
  **/
  @ApiModelProperty(value = "")
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public PushToCardResponse address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Get address2
   * @return address2
  **/
  @ApiModelProperty(value = "")
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public PushToCardResponse city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(value = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public PushToCardResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public PushToCardResponse zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Get zip
   * @return zip
  **/
  @ApiModelProperty(value = "")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public PushToCardResponse country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(value = "")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public PushToCardResponse lastFour(String lastFour) {
    this.lastFour = lastFour;
    return this;
  }

   /**
   * Get lastFour
   * @return lastFour
  **/
  @ApiModelProperty(value = "")
  public String getLastFour() {
    return lastFour;
  }

  public void setLastFour(String lastFour) {
    this.lastFour = lastFour;
  }

  public PushToCardResponse token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public PushToCardResponse fastFundTransferEligible(Boolean fastFundTransferEligible) {
    this.fastFundTransferEligible = fastFundTransferEligible;
    return this;
  }

   /**
   * Get fastFundTransferEligible
   * @return fastFundTransferEligible
  **/
  @ApiModelProperty(value = "")
  public Boolean isFastFundTransferEligible() {
    return fastFundTransferEligible;
  }

  public void setFastFundTransferEligible(Boolean fastFundTransferEligible) {
    this.fastFundTransferEligible = fastFundTransferEligible;
  }

  public PushToCardResponse gamblingFundTransferEligible(Boolean gamblingFundTransferEligible) {
    this.gamblingFundTransferEligible = gamblingFundTransferEligible;
    return this;
  }

   /**
   * Get gamblingFundTransferEligible
   * @return gamblingFundTransferEligible
  **/
  @ApiModelProperty(value = "")
  public Boolean isGamblingFundTransferEligible() {
    return gamblingFundTransferEligible;
  }

  public void setGamblingFundTransferEligible(Boolean gamblingFundTransferEligible) {
    this.gamblingFundTransferEligible = gamblingFundTransferEligible;
  }

  public PushToCardResponse nameOnCard(String nameOnCard) {
    this.nameOnCard = nameOnCard;
    return this;
  }

   /**
   * Get nameOnCard
   * @return nameOnCard
  **/
  @ApiModelProperty(value = "")
  public String getNameOnCard() {
    return nameOnCard;
  }

  public void setNameOnCard(String nameOnCard) {
    this.nameOnCard = nameOnCard;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @ApiModelProperty(value = "")
  public String getLastName() {
    return lastName;
  }

  public PushToCardResponse expDate(String expDate) {
    this.expDate = expDate;
    return this;
  }

   /**
   * Get expDate
   * @return expDate
  **/
  @ApiModelProperty(value = "")
  public String getExpDate() {
    return expDate;
  }

  public void setExpDate(String expDate) {
    this.expDate = expDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushToCardResponse pushToCardResponse = (PushToCardResponse) o;
    return Objects.equals(this.createdTime, pushToCardResponse.createdTime) &&
        Objects.equals(this.lastModifiedTime, pushToCardResponse.lastModifiedTime) &&
        Objects.equals(this.address1, pushToCardResponse.address1) &&
        Objects.equals(this.address2, pushToCardResponse.address2) &&
        Objects.equals(this.city, pushToCardResponse.city) &&
        Objects.equals(this.state, pushToCardResponse.state) &&
        Objects.equals(this.zip, pushToCardResponse.zip) &&
        Objects.equals(this.country, pushToCardResponse.country) &&
        Objects.equals(this.lastFour, pushToCardResponse.lastFour) &&
        Objects.equals(this.token, pushToCardResponse.token) &&
        Objects.equals(this.fastFundTransferEligible, pushToCardResponse.fastFundTransferEligible) &&
        Objects.equals(this.gamblingFundTransferEligible, pushToCardResponse.gamblingFundTransferEligible) &&
        Objects.equals(this.nameOnCard, pushToCardResponse.nameOnCard) &&
        Objects.equals(this.lastName, pushToCardResponse.lastName) &&
        Objects.equals(this.expDate, pushToCardResponse.expDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, lastModifiedTime, address1, address2, city, state, zip, country, lastFour, token, fastFundTransferEligible, gamblingFundTransferEligible, nameOnCard, lastName, expDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushToCardResponse {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastModifiedTime: ").append(toIndentedString(lastModifiedTime)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    lastFour: ").append(toIndentedString(lastFour)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    fastFundTransferEligible: ").append(toIndentedString(fastFundTransferEligible)).append("\n");
    sb.append("    gamblingFundTransferEligible: ").append(toIndentedString(gamblingFundTransferEligible)).append("\n");
    sb.append("    nameOnCard: ").append(toIndentedString(nameOnCard)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    expDate: ").append(toIndentedString(expDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

