/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InternalAccount;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InternalUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class InternalUser {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("active")
  private Boolean active = false;

  @SerializedName("email")
  private String email = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("uses_parent_account")
  private Boolean usesParentAccount = false;

  @SerializedName("corporate_card_holder")
  private Boolean corporateCardHolder = false;

  @SerializedName("user_accounts")
  private List<InternalAccount> userAccounts = null;

  public InternalUser id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InternalUser token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public InternalUser active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @ApiModelProperty(value = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public InternalUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public InternalUser type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public InternalUser usesParentAccount(Boolean usesParentAccount) {
    this.usesParentAccount = usesParentAccount;
    return this;
  }

   /**
   * Get usesParentAccount
   * @return usesParentAccount
  **/
  @ApiModelProperty(value = "")
  public Boolean isUsesParentAccount() {
    return usesParentAccount;
  }

  public void setUsesParentAccount(Boolean usesParentAccount) {
    this.usesParentAccount = usesParentAccount;
  }

  public InternalUser corporateCardHolder(Boolean corporateCardHolder) {
    this.corporateCardHolder = corporateCardHolder;
    return this;
  }

   /**
   * Get corporateCardHolder
   * @return corporateCardHolder
  **/
  @ApiModelProperty(value = "")
  public Boolean isCorporateCardHolder() {
    return corporateCardHolder;
  }

  public void setCorporateCardHolder(Boolean corporateCardHolder) {
    this.corporateCardHolder = corporateCardHolder;
  }

  public InternalUser userAccounts(List<InternalAccount> userAccounts) {
    this.userAccounts = userAccounts;
    return this;
  }

  public InternalUser addUserAccountsItem(InternalAccount userAccountsItem) {
    if (this.userAccounts == null) {
      this.userAccounts = new ArrayList<InternalAccount>();
    }
    this.userAccounts.add(userAccountsItem);
    return this;
  }

   /**
   * Get userAccounts
   * @return userAccounts
  **/
  @ApiModelProperty(value = "")
  public List<InternalAccount> getUserAccounts() {
    return userAccounts;
  }

  public void setUserAccounts(List<InternalAccount> userAccounts) {
    this.userAccounts = userAccounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternalUser internalUser = (InternalUser) o;
    return Objects.equals(this.id, internalUser.id) &&
        Objects.equals(this.token, internalUser.token) &&
        Objects.equals(this.active, internalUser.active) &&
        Objects.equals(this.email, internalUser.email) &&
        Objects.equals(this.type, internalUser.type) &&
        Objects.equals(this.usesParentAccount, internalUser.usesParentAccount) &&
        Objects.equals(this.corporateCardHolder, internalUser.corporateCardHolder) &&
        Objects.equals(this.userAccounts, internalUser.userAccounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, token, active, email, type, usesParentAccount, corporateCardHolder, userAccounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternalUser {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usesParentAccount: ").append(toIndentedString(usesParentAccount)).append("\n");
    sb.append("    corporateCardHolder: ").append(toIndentedString(corporateCardHolder)).append("\n");
    sb.append("    userAccounts: ").append(toIndentedString(userAccounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

