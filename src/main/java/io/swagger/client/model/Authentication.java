/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Authentication
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class Authentication {
  /**
   * Gets or Sets lastPasswordUpdateChannel
   */
  @JsonAdapter(LastPasswordUpdateChannelEnum.Adapter.class)
  public enum LastPasswordUpdateChannelEnum {
    CHANGE("USER_CHANGE"),
    
    RESET("USER_RESET");

    private String value;

    LastPasswordUpdateChannelEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LastPasswordUpdateChannelEnum fromValue(String text) {
      for (LastPasswordUpdateChannelEnum b : LastPasswordUpdateChannelEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LastPasswordUpdateChannelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LastPasswordUpdateChannelEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LastPasswordUpdateChannelEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LastPasswordUpdateChannelEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("last_password_update_channel")
  private LastPasswordUpdateChannelEnum lastPasswordUpdateChannel = null;

  @SerializedName("last_password_update_time")
  private OffsetDateTime lastPasswordUpdateTime = null;

  @SerializedName("email_verified")
  private Boolean emailVerified = false;

  @SerializedName("email_verified_time")
  private OffsetDateTime emailVerifiedTime = null;

  public Authentication lastPasswordUpdateChannel(LastPasswordUpdateChannelEnum lastPasswordUpdateChannel) {
    this.lastPasswordUpdateChannel = lastPasswordUpdateChannel;
    return this;
  }

   /**
   * Get lastPasswordUpdateChannel
   * @return lastPasswordUpdateChannel
  **/
  @ApiModelProperty(value = "")
  public LastPasswordUpdateChannelEnum getLastPasswordUpdateChannel() {
    return lastPasswordUpdateChannel;
  }

  public void setLastPasswordUpdateChannel(LastPasswordUpdateChannelEnum lastPasswordUpdateChannel) {
    this.lastPasswordUpdateChannel = lastPasswordUpdateChannel;
  }

  public Authentication lastPasswordUpdateTime(OffsetDateTime lastPasswordUpdateTime) {
    this.lastPasswordUpdateTime = lastPasswordUpdateTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return lastPasswordUpdateTime
  **/
  @ApiModelProperty(value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getLastPasswordUpdateTime() {
    return lastPasswordUpdateTime;
  }

  public void setLastPasswordUpdateTime(OffsetDateTime lastPasswordUpdateTime) {
    this.lastPasswordUpdateTime = lastPasswordUpdateTime;
  }

  public Authentication emailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * Get emailVerified
   * @return emailVerified
  **/
  @ApiModelProperty(value = "")
  public Boolean isEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }

  public Authentication emailVerifiedTime(OffsetDateTime emailVerifiedTime) {
    this.emailVerifiedTime = emailVerifiedTime;
    return this;
  }

   /**
   * yyyy-MM-ddTHH:mm:ssZ
   * @return emailVerifiedTime
  **/
  @ApiModelProperty(value = "yyyy-MM-ddTHH:mm:ssZ")
  public OffsetDateTime getEmailVerifiedTime() {
    return emailVerifiedTime;
  }

  public void setEmailVerifiedTime(OffsetDateTime emailVerifiedTime) {
    this.emailVerifiedTime = emailVerifiedTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Authentication authentication = (Authentication) o;
    return Objects.equals(this.lastPasswordUpdateChannel, authentication.lastPasswordUpdateChannel) &&
        Objects.equals(this.lastPasswordUpdateTime, authentication.lastPasswordUpdateTime) &&
        Objects.equals(this.emailVerified, authentication.emailVerified) &&
        Objects.equals(this.emailVerifiedTime, authentication.emailVerifiedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastPasswordUpdateChannel, lastPasswordUpdateTime, emailVerified, emailVerifiedTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Authentication {\n");
    
    sb.append("    lastPasswordUpdateChannel: ").append(toIndentedString(lastPasswordUpdateChannel)).append("\n");
    sb.append("    lastPasswordUpdateTime: ").append(toIndentedString(lastPasswordUpdateTime)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    emailVerifiedTime: ").append(toIndentedString(emailVerifiedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

