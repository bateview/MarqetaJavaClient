/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.InternalCard;
import io.swagger.client.model.InternalCardProduct;
import io.swagger.client.model.InternalTransactionDataModel;
import io.swagger.client.model.InternalUser;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * VelocityControlCheckRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class VelocityControlCheckRequest {
  @SerializedName("card_product")
  private InternalCardProduct cardProduct = null;

  @SerializedName("transaction")
  private InternalTransactionDataModel transaction = null;

  @SerializedName("card_holder")
  private InternalUser cardHolder = null;

  @SerializedName("card")
  private InternalCard card = null;

  @SerializedName("context")
  private Map<String, String> context = null;

  @SerializedName("write_cache")
  private Boolean writeCache = false;

  @SerializedName("debug")
  private Boolean debug = false;

  public VelocityControlCheckRequest cardProduct(InternalCardProduct cardProduct) {
    this.cardProduct = cardProduct;
    return this;
  }

   /**
   * Get cardProduct
   * @return cardProduct
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalCardProduct getCardProduct() {
    return cardProduct;
  }

  public void setCardProduct(InternalCardProduct cardProduct) {
    this.cardProduct = cardProduct;
  }

  public VelocityControlCheckRequest transaction(InternalTransactionDataModel transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalTransactionDataModel getTransaction() {
    return transaction;
  }

  public void setTransaction(InternalTransactionDataModel transaction) {
    this.transaction = transaction;
  }

  public VelocityControlCheckRequest cardHolder(InternalUser cardHolder) {
    this.cardHolder = cardHolder;
    return this;
  }

   /**
   * Get cardHolder
   * @return cardHolder
  **/
  @ApiModelProperty(required = true, value = "")
  public InternalUser getCardHolder() {
    return cardHolder;
  }

  public void setCardHolder(InternalUser cardHolder) {
    this.cardHolder = cardHolder;
  }

  public VelocityControlCheckRequest card(InternalCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public InternalCard getCard() {
    return card;
  }

  public void setCard(InternalCard card) {
    this.card = card;
  }

  public VelocityControlCheckRequest context(Map<String, String> context) {
    this.context = context;
    return this;
  }

  public VelocityControlCheckRequest putContextItem(String key, String contextItem) {
    if (this.context == null) {
      this.context = new HashMap<String, String>();
    }
    this.context.put(key, contextItem);
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getContext() {
    return context;
  }

  public void setContext(Map<String, String> context) {
    this.context = context;
  }

  public VelocityControlCheckRequest writeCache(Boolean writeCache) {
    this.writeCache = writeCache;
    return this;
  }

   /**
   * Get writeCache
   * @return writeCache
  **/
  @ApiModelProperty(value = "")
  public Boolean isWriteCache() {
    return writeCache;
  }

  public void setWriteCache(Boolean writeCache) {
    this.writeCache = writeCache;
  }

  public VelocityControlCheckRequest debug(Boolean debug) {
    this.debug = debug;
    return this;
  }

   /**
   * Get debug
   * @return debug
  **/
  @ApiModelProperty(value = "")
  public Boolean isDebug() {
    return debug;
  }

  public void setDebug(Boolean debug) {
    this.debug = debug;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VelocityControlCheckRequest velocityControlCheckRequest = (VelocityControlCheckRequest) o;
    return Objects.equals(this.cardProduct, velocityControlCheckRequest.cardProduct) &&
        Objects.equals(this.transaction, velocityControlCheckRequest.transaction) &&
        Objects.equals(this.cardHolder, velocityControlCheckRequest.cardHolder) &&
        Objects.equals(this.card, velocityControlCheckRequest.card) &&
        Objects.equals(this.context, velocityControlCheckRequest.context) &&
        Objects.equals(this.writeCache, velocityControlCheckRequest.writeCache) &&
        Objects.equals(this.debug, velocityControlCheckRequest.debug);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardProduct, transaction, cardHolder, card, context, writeCache, debug);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VelocityControlCheckRequest {\n");
    
    sb.append("    cardProduct: ").append(toIndentedString(cardProduct)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    cardHolder: ").append(toIndentedString(cardHolder)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    writeCache: ").append(toIndentedString(writeCache)).append("\n");
    sb.append("    debug: ").append(toIndentedString(debug)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

