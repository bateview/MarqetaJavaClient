/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CardAcceptorModel;
import io.swagger.client.model.CardOptions;
import io.swagger.client.model.NetworkFeeModel;
import io.swagger.client.model.TransactionOptions;
import io.swagger.client.model.Webhook;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * AuthRequestModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class AuthRequestModel {
  @SerializedName("network_fees")
  private List<NetworkFeeModel> networkFees = null;

  @SerializedName("webhook")
  private Webhook webhook = null;

  @SerializedName("card_token")
  private String cardToken = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("cash_back_amount")
  private BigDecimal cashBackAmount = null;

  @SerializedName("mid")
  private String mid = null;

  @SerializedName("is_pre_auth")
  private Boolean isPreAuth = false;

  @SerializedName("pin")
  private String pin = null;

  @SerializedName("card_options")
  private CardOptions cardOptions = null;

  @SerializedName("card_acceptor")
  private CardAcceptorModel cardAcceptor = null;

  @SerializedName("transaction_options")
  private TransactionOptions transactionOptions = null;

  public AuthRequestModel networkFees(List<NetworkFeeModel> networkFees) {
    this.networkFees = networkFees;
    return this;
  }

  public AuthRequestModel addNetworkFeesItem(NetworkFeeModel networkFeesItem) {
    if (this.networkFees == null) {
      this.networkFees = new ArrayList<NetworkFeeModel>();
    }
    this.networkFees.add(networkFeesItem);
    return this;
  }

   /**
   * Get networkFees
   * @return networkFees
  **/
  @ApiModelProperty(value = "")
  public List<NetworkFeeModel> getNetworkFees() {
    return networkFees;
  }

  public void setNetworkFees(List<NetworkFeeModel> networkFees) {
    this.networkFees = networkFees;
  }

  public AuthRequestModel webhook(Webhook webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @ApiModelProperty(value = "")
  public Webhook getWebhook() {
    return webhook;
  }

  public void setWebhook(Webhook webhook) {
    this.webhook = webhook;
  }

  public AuthRequestModel cardToken(String cardToken) {
    this.cardToken = cardToken;
    return this;
  }

   /**
   * Get cardToken
   * @return cardToken
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCardToken() {
    return cardToken;
  }

  public void setCardToken(String cardToken) {
    this.cardToken = cardToken;
  }

  public AuthRequestModel amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public AuthRequestModel cashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
    return this;
  }

   /**
   * Get cashBackAmount
   * @return cashBackAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCashBackAmount() {
    return cashBackAmount;
  }

  public void setCashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
  }

  public AuthRequestModel mid(String mid) {
    this.mid = mid;
    return this;
  }

   /**
   * Get mid
   * @return mid
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMid() {
    return mid;
  }

  public void setMid(String mid) {
    this.mid = mid;
  }

  public AuthRequestModel isPreAuth(Boolean isPreAuth) {
    this.isPreAuth = isPreAuth;
    return this;
  }

   /**
   * Get isPreAuth
   * @return isPreAuth
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsPreAuth() {
    return isPreAuth;
  }

  public void setIsPreAuth(Boolean isPreAuth) {
    this.isPreAuth = isPreAuth;
  }

  public AuthRequestModel pin(String pin) {
    this.pin = pin;
    return this;
  }

   /**
   * Get pin
   * @return pin
  **/
  @ApiModelProperty(value = "")
  public String getPin() {
    return pin;
  }

  public void setPin(String pin) {
    this.pin = pin;
  }

  public AuthRequestModel cardOptions(CardOptions cardOptions) {
    this.cardOptions = cardOptions;
    return this;
  }

   /**
   * Get cardOptions
   * @return cardOptions
  **/
  @ApiModelProperty(value = "")
  public CardOptions getCardOptions() {
    return cardOptions;
  }

  public void setCardOptions(CardOptions cardOptions) {
    this.cardOptions = cardOptions;
  }

  public AuthRequestModel cardAcceptor(CardAcceptorModel cardAcceptor) {
    this.cardAcceptor = cardAcceptor;
    return this;
  }

   /**
   * Get cardAcceptor
   * @return cardAcceptor
  **/
  @ApiModelProperty(value = "")
  public CardAcceptorModel getCardAcceptor() {
    return cardAcceptor;
  }

  public void setCardAcceptor(CardAcceptorModel cardAcceptor) {
    this.cardAcceptor = cardAcceptor;
  }

  public AuthRequestModel transactionOptions(TransactionOptions transactionOptions) {
    this.transactionOptions = transactionOptions;
    return this;
  }

   /**
   * Get transactionOptions
   * @return transactionOptions
  **/
  @ApiModelProperty(value = "")
  public TransactionOptions getTransactionOptions() {
    return transactionOptions;
  }

  public void setTransactionOptions(TransactionOptions transactionOptions) {
    this.transactionOptions = transactionOptions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthRequestModel authRequestModel = (AuthRequestModel) o;
    return Objects.equals(this.networkFees, authRequestModel.networkFees) &&
        Objects.equals(this.webhook, authRequestModel.webhook) &&
        Objects.equals(this.cardToken, authRequestModel.cardToken) &&
        Objects.equals(this.amount, authRequestModel.amount) &&
        Objects.equals(this.cashBackAmount, authRequestModel.cashBackAmount) &&
        Objects.equals(this.mid, authRequestModel.mid) &&
        Objects.equals(this.isPreAuth, authRequestModel.isPreAuth) &&
        Objects.equals(this.pin, authRequestModel.pin) &&
        Objects.equals(this.cardOptions, authRequestModel.cardOptions) &&
        Objects.equals(this.cardAcceptor, authRequestModel.cardAcceptor) &&
        Objects.equals(this.transactionOptions, authRequestModel.transactionOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkFees, webhook, cardToken, amount, cashBackAmount, mid, isPreAuth, pin, cardOptions, cardAcceptor, transactionOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthRequestModel {\n");
    
    sb.append("    networkFees: ").append(toIndentedString(networkFees)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    cardToken: ").append(toIndentedString(cardToken)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    cashBackAmount: ").append(toIndentedString(cashBackAmount)).append("\n");
    sb.append("    mid: ").append(toIndentedString(mid)).append("\n");
    sb.append("    isPreAuth: ").append(toIndentedString(isPreAuth)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    cardOptions: ").append(toIndentedString(cardOptions)).append("\n");
    sb.append("    cardAcceptor: ").append(toIndentedString(cardAcceptor)).append("\n");
    sb.append("    transactionOptions: ").append(toIndentedString(transactionOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

