/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ImagesCard;
import io.swagger.client.model.ImagesCarrier;
import io.swagger.client.model.ImagesCarrierReturnWindow;
import io.swagger.client.model.ImagesSignature;
import java.io.IOException;

/**
 * Images
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class Images {
  @SerializedName("card")
  private ImagesCard card = null;

  @SerializedName("carrier")
  private ImagesCarrier carrier = null;

  @SerializedName("signature")
  private ImagesSignature signature = null;

  @SerializedName("carrier_return_window")
  private ImagesCarrierReturnWindow carrierReturnWindow = null;

  public Images card(ImagesCard card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public ImagesCard getCard() {
    return card;
  }

  public void setCard(ImagesCard card) {
    this.card = card;
  }

  public Images carrier(ImagesCarrier carrier) {
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @ApiModelProperty(value = "")
  public ImagesCarrier getCarrier() {
    return carrier;
  }

  public void setCarrier(ImagesCarrier carrier) {
    this.carrier = carrier;
  }

  public Images signature(ImagesSignature signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @ApiModelProperty(value = "")
  public ImagesSignature getSignature() {
    return signature;
  }

  public void setSignature(ImagesSignature signature) {
    this.signature = signature;
  }

  public Images carrierReturnWindow(ImagesCarrierReturnWindow carrierReturnWindow) {
    this.carrierReturnWindow = carrierReturnWindow;
    return this;
  }

   /**
   * Get carrierReturnWindow
   * @return carrierReturnWindow
  **/
  @ApiModelProperty(value = "")
  public ImagesCarrierReturnWindow getCarrierReturnWindow() {
    return carrierReturnWindow;
  }

  public void setCarrierReturnWindow(ImagesCarrierReturnWindow carrierReturnWindow) {
    this.carrierReturnWindow = carrierReturnWindow;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Images images = (Images) o;
    return Objects.equals(this.card, images.card) &&
        Objects.equals(this.carrier, images.carrier) &&
        Objects.equals(this.signature, images.signature) &&
        Objects.equals(this.carrierReturnWindow, images.carrierReturnWindow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(card, carrier, signature, carrierReturnWindow);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Images {\n");
    
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    carrierReturnWindow: ").append(toIndentedString(carrierReturnWindow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

