/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Acquirer;
import io.swagger.client.model.AddressVerificationModel;
import io.swagger.client.model.AutoReloadModel;
import io.swagger.client.model.BusinessMetadata;
import io.swagger.client.model.CardResponse;
import io.swagger.client.model.CardSecurityCodeVerification;
import io.swagger.client.model.CardholderAuthenticationData;
import io.swagger.client.model.CardholderBalance;
import io.swagger.client.model.CardholderMetadata;
import io.swagger.client.model.ChargebackResponse;
import io.swagger.client.model.CurrencyConversion;
import io.swagger.client.model.DepositDepositResponse;
import io.swagger.client.model.DigitalWalletToken;
import io.swagger.client.model.DisputeModel;
import io.swagger.client.model.Fee;
import io.swagger.client.model.FeeTransferResponse;
import io.swagger.client.model.Fraud;
import io.swagger.client.model.GpaResponse;
import io.swagger.client.model.GpaReturns;
import io.swagger.client.model.MerchantResponseModel;
import io.swagger.client.model.MsaOrderResponse;
import io.swagger.client.model.MsaReturns;
import io.swagger.client.model.NetworkFeeModel;
import io.swagger.client.model.OfferOrderResponse;
import io.swagger.client.model.OriginalCredit;
import io.swagger.client.model.PeerTransferResponse;
import io.swagger.client.model.PrecedingTransaction;
import io.swagger.client.model.ProgramTransferResponse;
import io.swagger.client.model.RealTimeFeeGroup;
import io.swagger.client.model.Response;
import io.swagger.client.model.StoreResponseModel;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * TransactionModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-07T21:08:00.979Z")
public class TransactionModel {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    GPA_CREDIT("gpa.credit"),
    
    GPA_CREDIT_PENDING("gpa.credit.pending"),
    
    GPA_CREDIT_PENDING_REVERSAL("gpa.credit.pending.reversal"),
    
    GPA_CREDIT_REVERSAL("gpa.credit.reversal"),
    
    GPA_CREDIT_NETWORKLOAD("gpa.credit.networkload"),
    
    GPA_CREDIT_NETWORKLOAD_REVERSAL("gpa.credit.networkload.reversal"),
    
    GPA_DEBIT_NETWORKLOAD("gpa.debit.networkload"),
    
    GPA_DEBIT("gpa.debit"),
    
    GPA_GRANT("gpa.grant"),
    
    GPA_CREDIT_ISSUEROPERATOR("gpa.credit.issueroperator"),
    
    GPA_DEBIT_ISSUEROPERATOR("gpa.debit.issueroperator"),
    
    GPA_CREDIT_CHARGEBACK("gpa.credit.chargeback"),
    
    GPA_CREDIT_CHARGEBACK_REVERSAL("gpa.credit.chargeback.reversal"),
    
    GPA_CREDIT_BILLPAYMENT("gpa.credit.billpayment"),
    
    GPA_CREDIT_AUTHORIZATION_BILLPAYMENT("gpa.credit.authorization.billpayment"),
    
    GPA_CREDIT_AUTHORIZATION_BILLPAYMENT_REVERSAL("gpa.credit.authorization.billpayment.reversal"),
    
    MSA_CREDIT_PENDING("msa.credit.pending"),
    
    MSA_CREDIT_PENDING_REVERSAL("msa.credit.pending.reversal"),
    
    MSA_CREDIT_REVERSAL("msa.credit.reversal"),
    
    MSA_CREDIT("msa.credit"),
    
    MSA_DEBIT("msa.debit"),
    
    MSA_CREDIT_CHARGEBACK("msa.credit.chargeback"),
    
    MSA_CREDIT_CHARGEBACK_REVERSAL("msa.credit.chargeback.reversal"),
    
    AUTHORIZATION("authorization"),
    
    AUTHORIZATION_ADVICE("authorization.advice"),
    
    AUTHORIZATION_REVERSAL("authorization.reversal"),
    
    AUTHORIZATION_CLEARING("authorization.clearing"),
    
    AUTHORIZATION_REVERSAL_ISSUEREXPIRATION("authorization.reversal.issuerexpiration"),
    
    AUTHORIZATION_CLEARING_CHARGEBACK("authorization.clearing.chargeback"),
    
    AUTHORIZATION_CLEARING_CHARGEBACK_REVERSAL("authorization.clearing.chargeback.reversal"),
    
    REFUND("refund"),
    
    PINDEBIT_ATM_WITHDRAWAL("pindebit.atm.withdrawal"),
    
    PINDEBIT_BALANCEINQUIRY("pindebit.balanceinquiry"),
    
    PINDEBIT_CASHBACK("pindebit.cashback"),
    
    PINDEBIT("pindebit"),
    
    PROGRAMRESERVE_CREDIT("programreserve.credit"),
    
    PROGRAMRESERVE_DEBIT("programreserve.debit"),
    
    BILLPAYMENT("billpayment"),
    
    BILLPAYMENT_CLEARING("billpayment.clearing"),
    
    BILLPAYMENT_REVERSAL("billpayment.reversal"),
    
    FEE_CHARGE_PENDING("fee.charge.pending"),
    
    FEE_CHARGE("fee.charge"),
    
    FEE_CHARGE_PENDING_REFUND("fee.charge.pending.refund"),
    
    FUNDS_EXPIRE("funds.expire"),
    
    REWARD_EARN("reward.earn"),
    
    TRANSFER_PEER("transfer.peer"),
    
    TRANSFER_FEE("transfer.fee"),
    
    ACCOUNT_CREDIT("account.credit"),
    
    ACCOUNT_DEBIT("account.debit"),
    
    UNKNOWN("unknown");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets state
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    PENDING("PENDING"),
    
    CLEARED("CLEARED"),
    
    COMPLETION("COMPLETION"),
    
    DECLINED("DECLINED"),
    
    ERROR("ERROR"),
    
    ALL("ALL");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("user_token")
  private String userToken = null;

  @SerializedName("business_token")
  private String businessToken = null;

  @SerializedName("acting_user_token")
  private String actingUserToken = null;

  @SerializedName("card_token")
  private String cardToken = null;

  @SerializedName("original_credit")
  private OriginalCredit originalCredit = null;

  @SerializedName("preceding_related_transaction_token")
  private String precedingRelatedTransactionToken = null;

  @SerializedName("preceding_transaction")
  private PrecedingTransaction precedingTransaction = null;

  @SerializedName("amount_to_be_released")
  private BigDecimal amountToBeReleased = null;

  @SerializedName("gpa")
  private CardholderBalance gpa = null;

  @SerializedName("gpa_order")
  private GpaResponse gpaOrder = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("created_time")
  private OffsetDateTime createdTime = null;

  @SerializedName("user_transaction_time")
  private OffsetDateTime userTransactionTime = null;

  @SerializedName("settlement_date")
  private OffsetDateTime settlementDate = null;

  @SerializedName("request_amount")
  private BigDecimal requestAmount = null;

  @SerializedName("cash_back_amount")
  private BigDecimal cashBackAmount = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("currency_conversion")
  private CurrencyConversion currencyConversion = null;

  @SerializedName("issuerInterchangeAmount")
  private BigDecimal issuerInterchangeAmount = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("approval_code")
  private String approvalCode = null;

  @SerializedName("response")
  private Response response = null;

  @SerializedName("incremental_authorization_transaction_tokens")
  private List<String> incrementalAuthorizationTransactionTokens = null;

  @SerializedName("merchant")
  private MerchantResponseModel merchant = null;

  @SerializedName("store")
  private StoreResponseModel store = null;

  @SerializedName("gpa_order_unload")
  private GpaReturns gpaOrderUnload = null;

  @SerializedName("program_transfer")
  private ProgramTransferResponse programTransfer = null;

  @SerializedName("fee_transfer")
  private FeeTransferResponse feeTransfer = null;

  @SerializedName("peer_transfer")
  private PeerTransferResponse peerTransfer = null;

  @SerializedName("msa_orders")
  private List<MsaOrderResponse> msaOrders = null;

  @SerializedName("msa_order_unload")
  private MsaReturns msaOrderUnload = null;

  @SerializedName("offer_orders")
  private List<OfferOrderResponse> offerOrders = null;

  @SerializedName("auto_reload")
  private AutoReloadModel autoReload = null;

  @SerializedName("direct_deposit")
  private DepositDepositResponse directDeposit = null;

  /**
   * Gets or Sets polarity
   */
  @JsonAdapter(PolarityEnum.Adapter.class)
  public enum PolarityEnum {
    CREDIT("CREDIT"),
    
    DEBIT("DEBIT"),
    
    PENDING_CREDIT("PENDING_CREDIT"),
    
    PENDING_DEBIT("PENDING_DEBIT");

    private String value;

    PolarityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PolarityEnum fromValue(String text) {
      for (PolarityEnum b : PolarityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PolarityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolarityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PolarityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PolarityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("polarity")
  private PolarityEnum polarity = null;

  @SerializedName("real_time_fee_group")
  private RealTimeFeeGroup realTimeFeeGroup = null;

  @SerializedName("fee")
  private Fee fee = null;

  @SerializedName("chargeback")
  private ChargebackResponse chargeback = null;

  @SerializedName("dispute")
  private DisputeModel dispute = null;

  @SerializedName("network")
  private String network = null;

  @SerializedName("subnetwork")
  private String subnetwork = null;

  @SerializedName("acquirer_fee_amount")
  private BigDecimal acquirerFeeAmount = null;

  @SerializedName("acquirer")
  private Acquirer acquirer = null;

  @SerializedName("fees")
  private List<NetworkFeeModel> fees = null;

  @SerializedName("digital_wallet_token")
  private DigitalWalletToken digitalWalletToken = null;

  @SerializedName("user")
  private CardholderMetadata user = null;

  @SerializedName("card")
  private CardResponse card = null;

  @SerializedName("business")
  private BusinessMetadata business = null;

  @SerializedName("address_verification")
  private AddressVerificationModel addressVerification = null;

  @SerializedName("card_security_code_verification")
  private CardSecurityCodeVerification cardSecurityCodeVerification = null;

  @SerializedName("fraud")
  private Fraud fraud = null;

  @SerializedName("standin_approved_by")
  private String standinApprovedBy = null;

  @SerializedName("standin_by")
  private String standinBy = null;

  @SerializedName("standin_reason")
  private String standinReason = null;

  @SerializedName("cardholder_authentication_data")
  private CardholderAuthenticationData cardholderAuthenticationData = null;

  @SerializedName("issuerReceivedTime")
  private String issuerReceivedTime = null;

  @SerializedName("issuerPaymentNode")
  private String issuerPaymentNode = null;

  @SerializedName("network_reference_id")
  private String networkReferenceId = null;

  @SerializedName("clearing_record_sequence_number")
  private String clearingRecordSequenceNumber = null;

  public TransactionModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public TransactionModel state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public TransactionModel identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @ApiModelProperty(value = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(required = true, value = "")
  public String getToken() {
    return token;
  }

  public TransactionModel userToken(String userToken) {
    this.userToken = userToken;
    return this;
  }

   /**
   * Get userToken
   * @return userToken
  **/
  @ApiModelProperty(value = "")
  public String getUserToken() {
    return userToken;
  }

  public void setUserToken(String userToken) {
    this.userToken = userToken;
  }

  public TransactionModel businessToken(String businessToken) {
    this.businessToken = businessToken;
    return this;
  }

   /**
   * Get businessToken
   * @return businessToken
  **/
  @ApiModelProperty(value = "")
  public String getBusinessToken() {
    return businessToken;
  }

  public void setBusinessToken(String businessToken) {
    this.businessToken = businessToken;
  }

  public TransactionModel actingUserToken(String actingUserToken) {
    this.actingUserToken = actingUserToken;
    return this;
  }

   /**
   * Get actingUserToken
   * @return actingUserToken
  **/
  @ApiModelProperty(required = true, value = "")
  public String getActingUserToken() {
    return actingUserToken;
  }

  public void setActingUserToken(String actingUserToken) {
    this.actingUserToken = actingUserToken;
  }

  public TransactionModel cardToken(String cardToken) {
    this.cardToken = cardToken;
    return this;
  }

   /**
   * Get cardToken
   * @return cardToken
  **/
  @ApiModelProperty(value = "")
  public String getCardToken() {
    return cardToken;
  }

  public void setCardToken(String cardToken) {
    this.cardToken = cardToken;
  }

  public TransactionModel originalCredit(OriginalCredit originalCredit) {
    this.originalCredit = originalCredit;
    return this;
  }

   /**
   * Get originalCredit
   * @return originalCredit
  **/
  @ApiModelProperty(value = "")
  public OriginalCredit getOriginalCredit() {
    return originalCredit;
  }

  public void setOriginalCredit(OriginalCredit originalCredit) {
    this.originalCredit = originalCredit;
  }

  public TransactionModel precedingRelatedTransactionToken(String precedingRelatedTransactionToken) {
    this.precedingRelatedTransactionToken = precedingRelatedTransactionToken;
    return this;
  }

   /**
   * Get precedingRelatedTransactionToken
   * @return precedingRelatedTransactionToken
  **/
  @ApiModelProperty(value = "")
  public String getPrecedingRelatedTransactionToken() {
    return precedingRelatedTransactionToken;
  }

  public void setPrecedingRelatedTransactionToken(String precedingRelatedTransactionToken) {
    this.precedingRelatedTransactionToken = precedingRelatedTransactionToken;
  }

  public TransactionModel precedingTransaction(PrecedingTransaction precedingTransaction) {
    this.precedingTransaction = precedingTransaction;
    return this;
  }

   /**
   * Get precedingTransaction
   * @return precedingTransaction
  **/
  @ApiModelProperty(value = "")
  public PrecedingTransaction getPrecedingTransaction() {
    return precedingTransaction;
  }

  public void setPrecedingTransaction(PrecedingTransaction precedingTransaction) {
    this.precedingTransaction = precedingTransaction;
  }

  public TransactionModel amountToBeReleased(BigDecimal amountToBeReleased) {
    this.amountToBeReleased = amountToBeReleased;
    return this;
  }

   /**
   * Get amountToBeReleased
   * @return amountToBeReleased
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmountToBeReleased() {
    return amountToBeReleased;
  }

  public void setAmountToBeReleased(BigDecimal amountToBeReleased) {
    this.amountToBeReleased = amountToBeReleased;
  }

  public TransactionModel gpa(CardholderBalance gpa) {
    this.gpa = gpa;
    return this;
  }

   /**
   * Get gpa
   * @return gpa
  **/
  @ApiModelProperty(value = "")
  public CardholderBalance getGpa() {
    return gpa;
  }

  public void setGpa(CardholderBalance gpa) {
    this.gpa = gpa;
  }

  public TransactionModel gpaOrder(GpaResponse gpaOrder) {
    this.gpaOrder = gpaOrder;
    return this;
  }

   /**
   * Get gpaOrder
   * @return gpaOrder
  **/
  @ApiModelProperty(value = "")
  public GpaResponse getGpaOrder() {
    return gpaOrder;
  }

  public void setGpaOrder(GpaResponse gpaOrder) {
    this.gpaOrder = gpaOrder;
  }

  public TransactionModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(value = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public TransactionModel createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }

  public TransactionModel userTransactionTime(OffsetDateTime userTransactionTime) {
    this.userTransactionTime = userTransactionTime;
    return this;
  }

   /**
   * Get userTransactionTime
   * @return userTransactionTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUserTransactionTime() {
    return userTransactionTime;
  }

  public void setUserTransactionTime(OffsetDateTime userTransactionTime) {
    this.userTransactionTime = userTransactionTime;
  }

  public TransactionModel settlementDate(OffsetDateTime settlementDate) {
    this.settlementDate = settlementDate;
    return this;
  }

   /**
   * Get settlementDate
   * @return settlementDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSettlementDate() {
    return settlementDate;
  }

  public void setSettlementDate(OffsetDateTime settlementDate) {
    this.settlementDate = settlementDate;
  }

  public TransactionModel requestAmount(BigDecimal requestAmount) {
    this.requestAmount = requestAmount;
    return this;
  }

   /**
   * Get requestAmount
   * @return requestAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getRequestAmount() {
    return requestAmount;
  }

  public void setRequestAmount(BigDecimal requestAmount) {
    this.requestAmount = requestAmount;
  }

  public TransactionModel cashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
    return this;
  }

   /**
   * Get cashBackAmount
   * @return cashBackAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getCashBackAmount() {
    return cashBackAmount;
  }

  public void setCashBackAmount(BigDecimal cashBackAmount) {
    this.cashBackAmount = cashBackAmount;
  }

  public TransactionModel amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public TransactionModel currencyConversion(CurrencyConversion currencyConversion) {
    this.currencyConversion = currencyConversion;
    return this;
  }

   /**
   * Get currencyConversion
   * @return currencyConversion
  **/
  @ApiModelProperty(value = "")
  public CurrencyConversion getCurrencyConversion() {
    return currencyConversion;
  }

  public void setCurrencyConversion(CurrencyConversion currencyConversion) {
    this.currencyConversion = currencyConversion;
  }

  public TransactionModel issuerInterchangeAmount(BigDecimal issuerInterchangeAmount) {
    this.issuerInterchangeAmount = issuerInterchangeAmount;
    return this;
  }

   /**
   * Get issuerInterchangeAmount
   * @return issuerInterchangeAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getIssuerInterchangeAmount() {
    return issuerInterchangeAmount;
  }

  public void setIssuerInterchangeAmount(BigDecimal issuerInterchangeAmount) {
    this.issuerInterchangeAmount = issuerInterchangeAmount;
  }

  public TransactionModel currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public TransactionModel approvalCode(String approvalCode) {
    this.approvalCode = approvalCode;
    return this;
  }

   /**
   * Get approvalCode
   * @return approvalCode
  **/
  @ApiModelProperty(value = "")
  public String getApprovalCode() {
    return approvalCode;
  }

  public void setApprovalCode(String approvalCode) {
    this.approvalCode = approvalCode;
  }

  public TransactionModel response(Response response) {
    this.response = response;
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  @ApiModelProperty(value = "")
  public Response getResponse() {
    return response;
  }

  public void setResponse(Response response) {
    this.response = response;
  }

  public TransactionModel incrementalAuthorizationTransactionTokens(List<String> incrementalAuthorizationTransactionTokens) {
    this.incrementalAuthorizationTransactionTokens = incrementalAuthorizationTransactionTokens;
    return this;
  }

  public TransactionModel addIncrementalAuthorizationTransactionTokensItem(String incrementalAuthorizationTransactionTokensItem) {
    if (this.incrementalAuthorizationTransactionTokens == null) {
      this.incrementalAuthorizationTransactionTokens = new ArrayList<String>();
    }
    this.incrementalAuthorizationTransactionTokens.add(incrementalAuthorizationTransactionTokensItem);
    return this;
  }

   /**
   * Get incrementalAuthorizationTransactionTokens
   * @return incrementalAuthorizationTransactionTokens
  **/
  @ApiModelProperty(value = "")
  public List<String> getIncrementalAuthorizationTransactionTokens() {
    return incrementalAuthorizationTransactionTokens;
  }

  public void setIncrementalAuthorizationTransactionTokens(List<String> incrementalAuthorizationTransactionTokens) {
    this.incrementalAuthorizationTransactionTokens = incrementalAuthorizationTransactionTokens;
  }

  public TransactionModel merchant(MerchantResponseModel merchant) {
    this.merchant = merchant;
    return this;
  }

   /**
   * Get merchant
   * @return merchant
  **/
  @ApiModelProperty(value = "")
  public MerchantResponseModel getMerchant() {
    return merchant;
  }

  public void setMerchant(MerchantResponseModel merchant) {
    this.merchant = merchant;
  }

  public TransactionModel store(StoreResponseModel store) {
    this.store = store;
    return this;
  }

   /**
   * Get store
   * @return store
  **/
  @ApiModelProperty(value = "")
  public StoreResponseModel getStore() {
    return store;
  }

  public void setStore(StoreResponseModel store) {
    this.store = store;
  }

  public TransactionModel gpaOrderUnload(GpaReturns gpaOrderUnload) {
    this.gpaOrderUnload = gpaOrderUnload;
    return this;
  }

   /**
   * Get gpaOrderUnload
   * @return gpaOrderUnload
  **/
  @ApiModelProperty(value = "")
  public GpaReturns getGpaOrderUnload() {
    return gpaOrderUnload;
  }

  public void setGpaOrderUnload(GpaReturns gpaOrderUnload) {
    this.gpaOrderUnload = gpaOrderUnload;
  }

  public TransactionModel programTransfer(ProgramTransferResponse programTransfer) {
    this.programTransfer = programTransfer;
    return this;
  }

   /**
   * Get programTransfer
   * @return programTransfer
  **/
  @ApiModelProperty(value = "")
  public ProgramTransferResponse getProgramTransfer() {
    return programTransfer;
  }

  public void setProgramTransfer(ProgramTransferResponse programTransfer) {
    this.programTransfer = programTransfer;
  }

  public TransactionModel feeTransfer(FeeTransferResponse feeTransfer) {
    this.feeTransfer = feeTransfer;
    return this;
  }

   /**
   * Get feeTransfer
   * @return feeTransfer
  **/
  @ApiModelProperty(value = "")
  public FeeTransferResponse getFeeTransfer() {
    return feeTransfer;
  }

  public void setFeeTransfer(FeeTransferResponse feeTransfer) {
    this.feeTransfer = feeTransfer;
  }

  public TransactionModel peerTransfer(PeerTransferResponse peerTransfer) {
    this.peerTransfer = peerTransfer;
    return this;
  }

   /**
   * Get peerTransfer
   * @return peerTransfer
  **/
  @ApiModelProperty(value = "")
  public PeerTransferResponse getPeerTransfer() {
    return peerTransfer;
  }

  public void setPeerTransfer(PeerTransferResponse peerTransfer) {
    this.peerTransfer = peerTransfer;
  }

  public TransactionModel msaOrders(List<MsaOrderResponse> msaOrders) {
    this.msaOrders = msaOrders;
    return this;
  }

  public TransactionModel addMsaOrdersItem(MsaOrderResponse msaOrdersItem) {
    if (this.msaOrders == null) {
      this.msaOrders = new ArrayList<MsaOrderResponse>();
    }
    this.msaOrders.add(msaOrdersItem);
    return this;
  }

   /**
   * Get msaOrders
   * @return msaOrders
  **/
  @ApiModelProperty(value = "")
  public List<MsaOrderResponse> getMsaOrders() {
    return msaOrders;
  }

  public void setMsaOrders(List<MsaOrderResponse> msaOrders) {
    this.msaOrders = msaOrders;
  }

  public TransactionModel msaOrderUnload(MsaReturns msaOrderUnload) {
    this.msaOrderUnload = msaOrderUnload;
    return this;
  }

   /**
   * Get msaOrderUnload
   * @return msaOrderUnload
  **/
  @ApiModelProperty(value = "")
  public MsaReturns getMsaOrderUnload() {
    return msaOrderUnload;
  }

  public void setMsaOrderUnload(MsaReturns msaOrderUnload) {
    this.msaOrderUnload = msaOrderUnload;
  }

  public TransactionModel offerOrders(List<OfferOrderResponse> offerOrders) {
    this.offerOrders = offerOrders;
    return this;
  }

  public TransactionModel addOfferOrdersItem(OfferOrderResponse offerOrdersItem) {
    if (this.offerOrders == null) {
      this.offerOrders = new ArrayList<OfferOrderResponse>();
    }
    this.offerOrders.add(offerOrdersItem);
    return this;
  }

   /**
   * Get offerOrders
   * @return offerOrders
  **/
  @ApiModelProperty(value = "")
  public List<OfferOrderResponse> getOfferOrders() {
    return offerOrders;
  }

  public void setOfferOrders(List<OfferOrderResponse> offerOrders) {
    this.offerOrders = offerOrders;
  }

  public TransactionModel autoReload(AutoReloadModel autoReload) {
    this.autoReload = autoReload;
    return this;
  }

   /**
   * Get autoReload
   * @return autoReload
  **/
  @ApiModelProperty(value = "")
  public AutoReloadModel getAutoReload() {
    return autoReload;
  }

  public void setAutoReload(AutoReloadModel autoReload) {
    this.autoReload = autoReload;
  }

  public TransactionModel directDeposit(DepositDepositResponse directDeposit) {
    this.directDeposit = directDeposit;
    return this;
  }

   /**
   * Get directDeposit
   * @return directDeposit
  **/
  @ApiModelProperty(value = "")
  public DepositDepositResponse getDirectDeposit() {
    return directDeposit;
  }

  public void setDirectDeposit(DepositDepositResponse directDeposit) {
    this.directDeposit = directDeposit;
  }

  public TransactionModel polarity(PolarityEnum polarity) {
    this.polarity = polarity;
    return this;
  }

   /**
   * Get polarity
   * @return polarity
  **/
  @ApiModelProperty(value = "")
  public PolarityEnum getPolarity() {
    return polarity;
  }

  public void setPolarity(PolarityEnum polarity) {
    this.polarity = polarity;
  }

  public TransactionModel realTimeFeeGroup(RealTimeFeeGroup realTimeFeeGroup) {
    this.realTimeFeeGroup = realTimeFeeGroup;
    return this;
  }

   /**
   * Get realTimeFeeGroup
   * @return realTimeFeeGroup
  **/
  @ApiModelProperty(value = "")
  public RealTimeFeeGroup getRealTimeFeeGroup() {
    return realTimeFeeGroup;
  }

  public void setRealTimeFeeGroup(RealTimeFeeGroup realTimeFeeGroup) {
    this.realTimeFeeGroup = realTimeFeeGroup;
  }

  public TransactionModel fee(Fee fee) {
    this.fee = fee;
    return this;
  }

   /**
   * Get fee
   * @return fee
  **/
  @ApiModelProperty(value = "")
  public Fee getFee() {
    return fee;
  }

  public void setFee(Fee fee) {
    this.fee = fee;
  }

  public TransactionModel chargeback(ChargebackResponse chargeback) {
    this.chargeback = chargeback;
    return this;
  }

   /**
   * Get chargeback
   * @return chargeback
  **/
  @ApiModelProperty(value = "")
  public ChargebackResponse getChargeback() {
    return chargeback;
  }

  public void setChargeback(ChargebackResponse chargeback) {
    this.chargeback = chargeback;
  }

  public TransactionModel dispute(DisputeModel dispute) {
    this.dispute = dispute;
    return this;
  }

   /**
   * Get dispute
   * @return dispute
  **/
  @ApiModelProperty(value = "")
  public DisputeModel getDispute() {
    return dispute;
  }

  public void setDispute(DisputeModel dispute) {
    this.dispute = dispute;
  }

  public TransactionModel network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public TransactionModel subnetwork(String subnetwork) {
    this.subnetwork = subnetwork;
    return this;
  }

   /**
   * Get subnetwork
   * @return subnetwork
  **/
  @ApiModelProperty(value = "")
  public String getSubnetwork() {
    return subnetwork;
  }

  public void setSubnetwork(String subnetwork) {
    this.subnetwork = subnetwork;
  }

  public TransactionModel acquirerFeeAmount(BigDecimal acquirerFeeAmount) {
    this.acquirerFeeAmount = acquirerFeeAmount;
    return this;
  }

   /**
   * Get acquirerFeeAmount
   * @return acquirerFeeAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAcquirerFeeAmount() {
    return acquirerFeeAmount;
  }

  public void setAcquirerFeeAmount(BigDecimal acquirerFeeAmount) {
    this.acquirerFeeAmount = acquirerFeeAmount;
  }

  public TransactionModel acquirer(Acquirer acquirer) {
    this.acquirer = acquirer;
    return this;
  }

   /**
   * Get acquirer
   * @return acquirer
  **/
  @ApiModelProperty(value = "")
  public Acquirer getAcquirer() {
    return acquirer;
  }

  public void setAcquirer(Acquirer acquirer) {
    this.acquirer = acquirer;
  }

  public TransactionModel fees(List<NetworkFeeModel> fees) {
    this.fees = fees;
    return this;
  }

  public TransactionModel addFeesItem(NetworkFeeModel feesItem) {
    if (this.fees == null) {
      this.fees = new ArrayList<NetworkFeeModel>();
    }
    this.fees.add(feesItem);
    return this;
  }

   /**
   * Get fees
   * @return fees
  **/
  @ApiModelProperty(value = "")
  public List<NetworkFeeModel> getFees() {
    return fees;
  }

  public void setFees(List<NetworkFeeModel> fees) {
    this.fees = fees;
  }

  public TransactionModel digitalWalletToken(DigitalWalletToken digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
    return this;
  }

   /**
   * Get digitalWalletToken
   * @return digitalWalletToken
  **/
  @ApiModelProperty(value = "")
  public DigitalWalletToken getDigitalWalletToken() {
    return digitalWalletToken;
  }

  public void setDigitalWalletToken(DigitalWalletToken digitalWalletToken) {
    this.digitalWalletToken = digitalWalletToken;
  }

  public TransactionModel user(CardholderMetadata user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public CardholderMetadata getUser() {
    return user;
  }

  public void setUser(CardholderMetadata user) {
    this.user = user;
  }

  public TransactionModel card(CardResponse card) {
    this.card = card;
    return this;
  }

   /**
   * Get card
   * @return card
  **/
  @ApiModelProperty(value = "")
  public CardResponse getCard() {
    return card;
  }

  public void setCard(CardResponse card) {
    this.card = card;
  }

  public TransactionModel business(BusinessMetadata business) {
    this.business = business;
    return this;
  }

   /**
   * Get business
   * @return business
  **/
  @ApiModelProperty(value = "")
  public BusinessMetadata getBusiness() {
    return business;
  }

  public void setBusiness(BusinessMetadata business) {
    this.business = business;
  }

  public TransactionModel addressVerification(AddressVerificationModel addressVerification) {
    this.addressVerification = addressVerification;
    return this;
  }

   /**
   * Get addressVerification
   * @return addressVerification
  **/
  @ApiModelProperty(value = "")
  public AddressVerificationModel getAddressVerification() {
    return addressVerification;
  }

  public void setAddressVerification(AddressVerificationModel addressVerification) {
    this.addressVerification = addressVerification;
  }

  public TransactionModel cardSecurityCodeVerification(CardSecurityCodeVerification cardSecurityCodeVerification) {
    this.cardSecurityCodeVerification = cardSecurityCodeVerification;
    return this;
  }

   /**
   * Get cardSecurityCodeVerification
   * @return cardSecurityCodeVerification
  **/
  @ApiModelProperty(value = "")
  public CardSecurityCodeVerification getCardSecurityCodeVerification() {
    return cardSecurityCodeVerification;
  }

  public void setCardSecurityCodeVerification(CardSecurityCodeVerification cardSecurityCodeVerification) {
    this.cardSecurityCodeVerification = cardSecurityCodeVerification;
  }

  public TransactionModel fraud(Fraud fraud) {
    this.fraud = fraud;
    return this;
  }

   /**
   * Get fraud
   * @return fraud
  **/
  @ApiModelProperty(value = "")
  public Fraud getFraud() {
    return fraud;
  }

  public void setFraud(Fraud fraud) {
    this.fraud = fraud;
  }

  public TransactionModel standinApprovedBy(String standinApprovedBy) {
    this.standinApprovedBy = standinApprovedBy;
    return this;
  }

   /**
   * Get standinApprovedBy
   * @return standinApprovedBy
  **/
  @ApiModelProperty(value = "")
  public String getStandinApprovedBy() {
    return standinApprovedBy;
  }

  public void setStandinApprovedBy(String standinApprovedBy) {
    this.standinApprovedBy = standinApprovedBy;
  }

  public TransactionModel standinBy(String standinBy) {
    this.standinBy = standinBy;
    return this;
  }

   /**
   * Get standinBy
   * @return standinBy
  **/
  @ApiModelProperty(value = "")
  public String getStandinBy() {
    return standinBy;
  }

  public void setStandinBy(String standinBy) {
    this.standinBy = standinBy;
  }

  public TransactionModel standinReason(String standinReason) {
    this.standinReason = standinReason;
    return this;
  }

   /**
   * Get standinReason
   * @return standinReason
  **/
  @ApiModelProperty(value = "")
  public String getStandinReason() {
    return standinReason;
  }

  public void setStandinReason(String standinReason) {
    this.standinReason = standinReason;
  }

  public TransactionModel cardholderAuthenticationData(CardholderAuthenticationData cardholderAuthenticationData) {
    this.cardholderAuthenticationData = cardholderAuthenticationData;
    return this;
  }

   /**
   * Get cardholderAuthenticationData
   * @return cardholderAuthenticationData
  **/
  @ApiModelProperty(value = "")
  public CardholderAuthenticationData getCardholderAuthenticationData() {
    return cardholderAuthenticationData;
  }

  public void setCardholderAuthenticationData(CardholderAuthenticationData cardholderAuthenticationData) {
    this.cardholderAuthenticationData = cardholderAuthenticationData;
  }

  public TransactionModel issuerReceivedTime(String issuerReceivedTime) {
    this.issuerReceivedTime = issuerReceivedTime;
    return this;
  }

   /**
   * Get issuerReceivedTime
   * @return issuerReceivedTime
  **/
  @ApiModelProperty(value = "")
  public String getIssuerReceivedTime() {
    return issuerReceivedTime;
  }

  public void setIssuerReceivedTime(String issuerReceivedTime) {
    this.issuerReceivedTime = issuerReceivedTime;
  }

  public TransactionModel issuerPaymentNode(String issuerPaymentNode) {
    this.issuerPaymentNode = issuerPaymentNode;
    return this;
  }

   /**
   * Get issuerPaymentNode
   * @return issuerPaymentNode
  **/
  @ApiModelProperty(value = "")
  public String getIssuerPaymentNode() {
    return issuerPaymentNode;
  }

  public void setIssuerPaymentNode(String issuerPaymentNode) {
    this.issuerPaymentNode = issuerPaymentNode;
  }

  public TransactionModel networkReferenceId(String networkReferenceId) {
    this.networkReferenceId = networkReferenceId;
    return this;
  }

   /**
   * Get networkReferenceId
   * @return networkReferenceId
  **/
  @ApiModelProperty(value = "")
  public String getNetworkReferenceId() {
    return networkReferenceId;
  }

  public void setNetworkReferenceId(String networkReferenceId) {
    this.networkReferenceId = networkReferenceId;
  }

  public TransactionModel clearingRecordSequenceNumber(String clearingRecordSequenceNumber) {
    this.clearingRecordSequenceNumber = clearingRecordSequenceNumber;
    return this;
  }

   /**
   * Get clearingRecordSequenceNumber
   * @return clearingRecordSequenceNumber
  **/
  @ApiModelProperty(value = "")
  public String getClearingRecordSequenceNumber() {
    return clearingRecordSequenceNumber;
  }

  public void setClearingRecordSequenceNumber(String clearingRecordSequenceNumber) {
    this.clearingRecordSequenceNumber = clearingRecordSequenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionModel transactionModel = (TransactionModel) o;
    return Objects.equals(this.type, transactionModel.type) &&
        Objects.equals(this.state, transactionModel.state) &&
        Objects.equals(this.identifier, transactionModel.identifier) &&
        Objects.equals(this.token, transactionModel.token) &&
        Objects.equals(this.userToken, transactionModel.userToken) &&
        Objects.equals(this.businessToken, transactionModel.businessToken) &&
        Objects.equals(this.actingUserToken, transactionModel.actingUserToken) &&
        Objects.equals(this.cardToken, transactionModel.cardToken) &&
        Objects.equals(this.originalCredit, transactionModel.originalCredit) &&
        Objects.equals(this.precedingRelatedTransactionToken, transactionModel.precedingRelatedTransactionToken) &&
        Objects.equals(this.precedingTransaction, transactionModel.precedingTransaction) &&
        Objects.equals(this.amountToBeReleased, transactionModel.amountToBeReleased) &&
        Objects.equals(this.gpa, transactionModel.gpa) &&
        Objects.equals(this.gpaOrder, transactionModel.gpaOrder) &&
        Objects.equals(this.duration, transactionModel.duration) &&
        Objects.equals(this.createdTime, transactionModel.createdTime) &&
        Objects.equals(this.userTransactionTime, transactionModel.userTransactionTime) &&
        Objects.equals(this.settlementDate, transactionModel.settlementDate) &&
        Objects.equals(this.requestAmount, transactionModel.requestAmount) &&
        Objects.equals(this.cashBackAmount, transactionModel.cashBackAmount) &&
        Objects.equals(this.amount, transactionModel.amount) &&
        Objects.equals(this.currencyConversion, transactionModel.currencyConversion) &&
        Objects.equals(this.issuerInterchangeAmount, transactionModel.issuerInterchangeAmount) &&
        Objects.equals(this.currencyCode, transactionModel.currencyCode) &&
        Objects.equals(this.approvalCode, transactionModel.approvalCode) &&
        Objects.equals(this.response, transactionModel.response) &&
        Objects.equals(this.incrementalAuthorizationTransactionTokens, transactionModel.incrementalAuthorizationTransactionTokens) &&
        Objects.equals(this.merchant, transactionModel.merchant) &&
        Objects.equals(this.store, transactionModel.store) &&
        Objects.equals(this.gpaOrderUnload, transactionModel.gpaOrderUnload) &&
        Objects.equals(this.programTransfer, transactionModel.programTransfer) &&
        Objects.equals(this.feeTransfer, transactionModel.feeTransfer) &&
        Objects.equals(this.peerTransfer, transactionModel.peerTransfer) &&
        Objects.equals(this.msaOrders, transactionModel.msaOrders) &&
        Objects.equals(this.msaOrderUnload, transactionModel.msaOrderUnload) &&
        Objects.equals(this.offerOrders, transactionModel.offerOrders) &&
        Objects.equals(this.autoReload, transactionModel.autoReload) &&
        Objects.equals(this.directDeposit, transactionModel.directDeposit) &&
        Objects.equals(this.polarity, transactionModel.polarity) &&
        Objects.equals(this.realTimeFeeGroup, transactionModel.realTimeFeeGroup) &&
        Objects.equals(this.fee, transactionModel.fee) &&
        Objects.equals(this.chargeback, transactionModel.chargeback) &&
        Objects.equals(this.dispute, transactionModel.dispute) &&
        Objects.equals(this.network, transactionModel.network) &&
        Objects.equals(this.subnetwork, transactionModel.subnetwork) &&
        Objects.equals(this.acquirerFeeAmount, transactionModel.acquirerFeeAmount) &&
        Objects.equals(this.acquirer, transactionModel.acquirer) &&
        Objects.equals(this.fees, transactionModel.fees) &&
        Objects.equals(this.digitalWalletToken, transactionModel.digitalWalletToken) &&
        Objects.equals(this.user, transactionModel.user) &&
        Objects.equals(this.card, transactionModel.card) &&
        Objects.equals(this.business, transactionModel.business) &&
        Objects.equals(this.addressVerification, transactionModel.addressVerification) &&
        Objects.equals(this.cardSecurityCodeVerification, transactionModel.cardSecurityCodeVerification) &&
        Objects.equals(this.fraud, transactionModel.fraud) &&
        Objects.equals(this.standinApprovedBy, transactionModel.standinApprovedBy) &&
        Objects.equals(this.standinBy, transactionModel.standinBy) &&
        Objects.equals(this.standinReason, transactionModel.standinReason) &&
        Objects.equals(this.cardholderAuthenticationData, transactionModel.cardholderAuthenticationData) &&
        Objects.equals(this.issuerReceivedTime, transactionModel.issuerReceivedTime) &&
        Objects.equals(this.issuerPaymentNode, transactionModel.issuerPaymentNode) &&
        Objects.equals(this.networkReferenceId, transactionModel.networkReferenceId) &&
        Objects.equals(this.clearingRecordSequenceNumber, transactionModel.clearingRecordSequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, state, identifier, token, userToken, businessToken, actingUserToken, cardToken, originalCredit, precedingRelatedTransactionToken, precedingTransaction, amountToBeReleased, gpa, gpaOrder, duration, createdTime, userTransactionTime, settlementDate, requestAmount, cashBackAmount, amount, currencyConversion, issuerInterchangeAmount, currencyCode, approvalCode, response, incrementalAuthorizationTransactionTokens, merchant, store, gpaOrderUnload, programTransfer, feeTransfer, peerTransfer, msaOrders, msaOrderUnload, offerOrders, autoReload, directDeposit, polarity, realTimeFeeGroup, fee, chargeback, dispute, network, subnetwork, acquirerFeeAmount, acquirer, fees, digitalWalletToken, user, card, business, addressVerification, cardSecurityCodeVerification, fraud, standinApprovedBy, standinBy, standinReason, cardholderAuthenticationData, issuerReceivedTime, issuerPaymentNode, networkReferenceId, clearingRecordSequenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionModel {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("    businessToken: ").append(toIndentedString(businessToken)).append("\n");
    sb.append("    actingUserToken: ").append(toIndentedString(actingUserToken)).append("\n");
    sb.append("    cardToken: ").append(toIndentedString(cardToken)).append("\n");
    sb.append("    originalCredit: ").append(toIndentedString(originalCredit)).append("\n");
    sb.append("    precedingRelatedTransactionToken: ").append(toIndentedString(precedingRelatedTransactionToken)).append("\n");
    sb.append("    precedingTransaction: ").append(toIndentedString(precedingTransaction)).append("\n");
    sb.append("    amountToBeReleased: ").append(toIndentedString(amountToBeReleased)).append("\n");
    sb.append("    gpa: ").append(toIndentedString(gpa)).append("\n");
    sb.append("    gpaOrder: ").append(toIndentedString(gpaOrder)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    userTransactionTime: ").append(toIndentedString(userTransactionTime)).append("\n");
    sb.append("    settlementDate: ").append(toIndentedString(settlementDate)).append("\n");
    sb.append("    requestAmount: ").append(toIndentedString(requestAmount)).append("\n");
    sb.append("    cashBackAmount: ").append(toIndentedString(cashBackAmount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currencyConversion: ").append(toIndentedString(currencyConversion)).append("\n");
    sb.append("    issuerInterchangeAmount: ").append(toIndentedString(issuerInterchangeAmount)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    approvalCode: ").append(toIndentedString(approvalCode)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    incrementalAuthorizationTransactionTokens: ").append(toIndentedString(incrementalAuthorizationTransactionTokens)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    store: ").append(toIndentedString(store)).append("\n");
    sb.append("    gpaOrderUnload: ").append(toIndentedString(gpaOrderUnload)).append("\n");
    sb.append("    programTransfer: ").append(toIndentedString(programTransfer)).append("\n");
    sb.append("    feeTransfer: ").append(toIndentedString(feeTransfer)).append("\n");
    sb.append("    peerTransfer: ").append(toIndentedString(peerTransfer)).append("\n");
    sb.append("    msaOrders: ").append(toIndentedString(msaOrders)).append("\n");
    sb.append("    msaOrderUnload: ").append(toIndentedString(msaOrderUnload)).append("\n");
    sb.append("    offerOrders: ").append(toIndentedString(offerOrders)).append("\n");
    sb.append("    autoReload: ").append(toIndentedString(autoReload)).append("\n");
    sb.append("    directDeposit: ").append(toIndentedString(directDeposit)).append("\n");
    sb.append("    polarity: ").append(toIndentedString(polarity)).append("\n");
    sb.append("    realTimeFeeGroup: ").append(toIndentedString(realTimeFeeGroup)).append("\n");
    sb.append("    fee: ").append(toIndentedString(fee)).append("\n");
    sb.append("    chargeback: ").append(toIndentedString(chargeback)).append("\n");
    sb.append("    dispute: ").append(toIndentedString(dispute)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    subnetwork: ").append(toIndentedString(subnetwork)).append("\n");
    sb.append("    acquirerFeeAmount: ").append(toIndentedString(acquirerFeeAmount)).append("\n");
    sb.append("    acquirer: ").append(toIndentedString(acquirer)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    digitalWalletToken: ").append(toIndentedString(digitalWalletToken)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    business: ").append(toIndentedString(business)).append("\n");
    sb.append("    addressVerification: ").append(toIndentedString(addressVerification)).append("\n");
    sb.append("    cardSecurityCodeVerification: ").append(toIndentedString(cardSecurityCodeVerification)).append("\n");
    sb.append("    fraud: ").append(toIndentedString(fraud)).append("\n");
    sb.append("    standinApprovedBy: ").append(toIndentedString(standinApprovedBy)).append("\n");
    sb.append("    standinBy: ").append(toIndentedString(standinBy)).append("\n");
    sb.append("    standinReason: ").append(toIndentedString(standinReason)).append("\n");
    sb.append("    cardholderAuthenticationData: ").append(toIndentedString(cardholderAuthenticationData)).append("\n");
    sb.append("    issuerReceivedTime: ").append(toIndentedString(issuerReceivedTime)).append("\n");
    sb.append("    issuerPaymentNode: ").append(toIndentedString(issuerPaymentNode)).append("\n");
    sb.append("    networkReferenceId: ").append(toIndentedString(networkReferenceId)).append("\n");
    sb.append("    clearingRecordSequenceNumber: ").append(toIndentedString(clearingRecordSequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

