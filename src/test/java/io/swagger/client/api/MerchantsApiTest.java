/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.MerchantListResponse;
import io.swagger.client.model.MerchantModel;
import io.swagger.client.model.MerchantResponseModel;
import io.swagger.client.model.MerchantUpdateModel;
import io.swagger.client.model.StoreListResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MerchantsApi
 */
@Ignore
public class MerchantsApiTest {

    private final MerchantsApi api = new MerchantsApi();

    
    /**
     * Lists all merchants
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantsTest() throws ApiException {
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        MerchantListResponse response = api.getMerchants(count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Returns a specific merchant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantsTokenTest() throws ApiException {
        String token = null;
        String fields = null;
        MerchantResponseModel response = api.getMerchantsToken(token, fields);

        // TODO: test validations
    }
    
    /**
     * Lists the stores associated with a specific merchant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMerchantsTokenStoresTest() throws ApiException {
        String token = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        StoreListResponse response = api.getMerchantsTokenStores(token, count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Creates a merchant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postMerchantsTest() throws ApiException {
        MerchantModel body = null;
        MerchantResponseModel response = api.postMerchants(body);

        // TODO: test validations
    }
    
    /**
     * Updates a specific merchant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putMerchantsTokenTest() throws ApiException {
        String token = null;
        MerchantUpdateModel body = null;
        MerchantResponseModel response = api.putMerchantsToken(token, body);

        // TODO: test validations
    }
    
}
