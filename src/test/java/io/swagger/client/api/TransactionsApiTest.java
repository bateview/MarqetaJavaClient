/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.TransactionModel;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransactionsApi
 */
@Ignore
public class TransactionsApiTest {

    private final TransactionsApi api = new TransactionsApi();

    
    /**
     * Returns transactions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionsTest() throws ApiException {
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        String startDate = null;
        String endDate = null;
        String type = null;
        String userToken = null;
        String businessToken = null;
        String actingUserToken = null;
        String cardToken = null;
        String merchantToken = null;
        String campaignToken = null;
        String state = null;
        String version = null;
        Boolean verbose = null;
        TransactionModel response = api.getTransactions(count, startIndex, fields, sortBy, startDate, endDate, type, userToken, businessToken, actingUserToken, cardToken, merchantToken, campaignToken, state, version, verbose);

        // TODO: test validations
    }
    
    /**
     * Returns transactions for a specific funding account
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionsFundingsourceFundingsourcetokenTest() throws ApiException {
        String fundingSourceToken = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        String startDate = null;
        String endDate = null;
        String type = null;
        String polarity = null;
        String version = null;
        Boolean verbose = null;
        TransactionModel response = api.getTransactionsFundingsourceFundingsourcetoken(fundingSourceToken, count, startIndex, fields, sortBy, startDate, endDate, type, polarity, version, verbose);

        // TODO: test validations
    }
    
    /**
     * Returns a transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionsTokenTest() throws ApiException {
        String token = null;
        String fields = null;
        String version = null;
        Boolean verbose = null;
        TransactionModel response = api.getTransactionsToken(token, fields, version, verbose);

        // TODO: test validations
    }
    
    /**
     * Returns related transactions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTransactionsTokenRelatedTest() throws ApiException {
        String token = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        String startDate = null;
        String endDate = null;
        String type = null;
        String state = null;
        String version = null;
        Boolean verbose = null;
        TransactionModel response = api.getTransactionsTokenRelated(token, count, startIndex, fields, sortBy, startDate, endDate, type, state, version, verbose);

        // TODO: test validations
    }
    
}
