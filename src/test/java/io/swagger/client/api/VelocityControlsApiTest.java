/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.VelocityControlBalanceResponse;
import io.swagger.client.model.VelocityControlListResponse;
import io.swagger.client.model.VelocityControlRequest;
import io.swagger.client.model.VelocityControlResponse;
import io.swagger.client.model.VelocityControlUpdateRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VelocityControlsApi
 */
@Ignore
public class VelocityControlsApiTest {

    private final VelocityControlsApi api = new VelocityControlsApi();

    
    /**
     * Queries velocity controls
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVelocitycontrolsTest() throws ApiException {
        String cardProduct = null;
        String user = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        VelocityControlListResponse response = api.getVelocitycontrols(cardProduct, user, count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Returns a specific velocity control
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVelocitycontrolsTokenTest() throws ApiException {
        String token = null;
        String fields = null;
        VelocityControlResponse response = api.getVelocitycontrolsToken(token, fields);

        // TODO: test validations
    }
    
    /**
     * Queries a user&#39;s velocity control balances
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVelocitycontrolsUserUsertokenAvailableTest() throws ApiException {
        String userToken = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        String forceDto = null;
        VelocityControlBalanceResponse response = api.getVelocitycontrolsUserUsertokenAvailable(userToken, count, startIndex, fields, sortBy, forceDto);

        // TODO: test validations
    }
    
    /**
     * Creates a velocity control
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postVelocitycontrolsTest() throws ApiException {
        VelocityControlRequest body = null;
        VelocityControlResponse response = api.postVelocitycontrols(body);

        // TODO: test validations
    }
    
    /**
     * Updates a specific velocity control
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putVelocitycontrolsTokenTest() throws ApiException {
        String token = null;
        VelocityControlUpdateRequest body = null;
        VelocityControlResponse response = api.putVelocitycontrolsToken(token, body);

        // TODO: test validations
    }
    
}
