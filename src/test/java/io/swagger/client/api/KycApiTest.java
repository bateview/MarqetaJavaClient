/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.KYCListResponse;
import io.swagger.client.model.KYCSubmitAnswersRequestModel;
import io.swagger.client.model.KycRequest;
import io.swagger.client.model.KycResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KycApi
 */
@Ignore
public class KycApiTest {

    private final KycApi api = new KycApi();

    
    /**
     * Lists all KYC results for a business
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKycBusinessBusinesstokenTest() throws ApiException {
        String businessToken = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        KYCListResponse response = api.getKycBusinessBusinesstoken(businessToken, count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Returns a specific KYC result
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKycTokenTest() throws ApiException {
        String token = null;
        KycResponse response = api.getKycToken(token);

        // TODO: test validations
    }
    
    /**
     * Lists all KYC results for a user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKycUserUsertokenTest() throws ApiException {
        String userToken = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        KYCListResponse response = api.getKycUserUsertoken(userToken, count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Performs a KYC
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postKycTest() throws ApiException {
        KycRequest body = null;
        KycResponse response = api.postKyc(body);

        // TODO: test validations
    }
    
    /**
     * Accepts KYC answers for questions from initial request
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putKycTokenTest() throws ApiException {
        String token = null;
        KYCSubmitAnswersRequestModel body = null;
        KycResponse response = api.putKycToken(token, body);

        // TODO: test validations
    }
    
}
