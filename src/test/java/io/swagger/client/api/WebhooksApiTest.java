/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.WebhookBaseModel;
import io.swagger.client.model.WebhookPingModel;
import io.swagger.client.model.WebhookRequestModel;
import io.swagger.client.model.WebhookResponseModel;
import io.swagger.client.model.WebhookUpdateCustomHeaderRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Ignore
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    
    /**
     * Returns a list of webhook configurations
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWebhooksTest() throws ApiException {
        Boolean active = null;
        Integer count = null;
        Integer startIndex = null;
        String fields = null;
        String sortBy = null;
        WebhookResponseModel response = api.getWebhooks(active, count, startIndex, fields, sortBy);

        // TODO: test validations
    }
    
    /**
     * Returns a webhook configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWebhooksTokenTest() throws ApiException {
        String token = null;
        WebhookResponseModel response = api.getWebhooksToken(token);

        // TODO: test validations
    }
    
    /**
     * Creates a webhook configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postWebhooksTest() throws ApiException {
        WebhookRequestModel body = null;
        WebhookResponseModel response = api.postWebhooks(body);

        // TODO: test validations
    }
    
    /**
     * Replays an event to a webhook
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postWebhooksTokenEventtypeEventtokenTest() throws ApiException {
        String token = null;
        String eventType = null;
        String eventToken = null;
        api.postWebhooksTokenEventtypeEventtoken(token, eventType, eventToken);

        // TODO: test validations
    }
    
    /**
     * Pings a webhook
     *
     * Endpoints must respond with a 200 status code.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postWebhooksTokenPingTest() throws ApiException {
        String token = null;
        WebhookPingModel response = api.postWebhooksTokenPing(token);

        // TODO: test validations
    }
    
    /**
     * Updates a specific webhook configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putWebhooksTokenTest() throws ApiException {
        String token = null;
        WebhookUpdateCustomHeaderRequest body = null;
        WebhookResponseModel response = api.putWebhooksToken(token, body);

        // TODO: test validations
    }
    
    /**
     * Updates a specific webhook configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putWebhooksToken_0Test() throws ApiException {
        String token = null;
        WebhookBaseModel body = null;
        WebhookResponseModel response = api.putWebhooksToken_0(token, body);

        // TODO: test validations
    }
    
}
