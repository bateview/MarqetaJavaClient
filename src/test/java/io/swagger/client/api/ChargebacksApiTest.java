/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ChargebackListResponse;
import io.swagger.client.model.ChargebackRequest;
import io.swagger.client.model.ChargebackResponse;
import io.swagger.client.model.ChargebackTransitionListResponse;
import io.swagger.client.model.ChargebackTransitionRequest;
import io.swagger.client.model.ChargebackTransitionResponse;
import io.swagger.client.model.ChargebackUpdateRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChargebacksApi
 */
@Ignore
public class ChargebacksApiTest {

    private final ChargebacksApi api = new ChargebacksApi();

    
    /**
     * List all chargebacks
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebacksTest() throws ApiException {
        Integer count = null;
        Integer startIndex = null;
        String networkReferenceId = null;
        String transactionToken = null;
        String amount = null;
        String states = null;
        String sortBy = null;
        String networkCaseId = null;
        ChargebackListResponse response = api.getChargebacks(count, startIndex, networkReferenceId, transactionToken, amount, states, sortBy, networkCaseId);

        // TODO: test validations
    }
    
    /**
     * Lists all chargeback transitions that are related to a chargeback
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebacksChargebacktokenTransitionsTest() throws ApiException {
        String chargebackToken = null;
        Integer count = null;
        Integer startIndex = null;
        String sortBy = null;
        ChargebackTransitionListResponse response = api.getChargebacksChargebacktokenTransitions(chargebackToken, count, startIndex, sortBy);

        // TODO: test validations
    }
    
    /**
     * Returns a specific chargeback
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebacksTokenTest() throws ApiException {
        String token = null;
        ChargebackResponse response = api.getChargebacksToken(token);

        // TODO: test validations
    }
    
    /**
     * Returns a specific chargeback transition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChargebacksTransitionsTokenTest() throws ApiException {
        String token = null;
        ChargebackTransitionResponse response = api.getChargebacksTransitionsToken(token);

        // TODO: test validations
    }
    
    /**
     * Creates a chargeback allocation acknowledgement
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postChargebackAllocationAcknowledgmentTest() throws ApiException {
        ChargebackRequest body = null;
        ChargebackResponse response = api.postChargebackAllocationAcknowledgment(body);

        // TODO: test validations
    }
    
    /**
     * Creates a chargeback
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postChargebacksTest() throws ApiException {
        ChargebackRequest body = null;
        ChargebackResponse response = api.postChargebacks(body);

        // TODO: test validations
    }
    
    /**
     * Creates a chargeback transition
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postChargebacksTransitionsTest() throws ApiException {
        ChargebackTransitionRequest body = null;
        ChargebackTransitionResponse response = api.postChargebacksTransitions(body);

        // TODO: test validations
    }
    
    /**
     * Updates chargeback data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putChargebacksTokenTest() throws ApiException {
        String token = null;
        ChargebackUpdateRequest body = null;
        ChargebackResponse response = api.putChargebacksToken(token, body);

        // TODO: test validations
    }
    
    /**
     * Grants provisional credit
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putChargebacksTokenGrantprovisionalcreditTest() throws ApiException {
        String token = null;
        ChargebackResponse response = api.putChargebacksTokenGrantprovisionalcredit(token);

        // TODO: test validations
    }
    
    /**
     * Reverses provisional credit
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putChargebacksTokenReverseprovisionalcreditTest() throws ApiException {
        String token = null;
        ChargebackResponse response = api.putChargebacksTokenReverseprovisionalcredit(token);

        // TODO: test validations
    }
    
}
